{"version":3,"file":"js/239.0e7ddeb2.js","mappings":"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","sources":["webpack://fitoagro_backoffice/../../../src/components/VAutocomplete/VAutocomplete.tsx","webpack://fitoagro_backoffice/../../src/composables/filter.ts"],"sourcesContent":["// Styles\nimport './VAutocomplete.sass'\n\n// Components\nimport { VAvatar } from '@/components/VAvatar'\nimport { VCheckboxBtn } from '@/components/VCheckbox'\nimport { VChip } from '@/components/VChip'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\nimport { VList, VListItem } from '@/components/VList'\nimport { VMenu } from '@/components/VMenu'\nimport { makeSelectProps } from '@/components/VSelect/VSelect'\nimport { makeVTextFieldProps, VTextField } from '@/components/VTextField/VTextField'\nimport { VVirtualScroll } from '@/components/VVirtualScroll'\n\n// Composables\nimport { useScrolling } from '../VSelect/useScrolling'\nimport { useTextColor } from '@/composables/color'\nimport { makeFilterProps, useFilter } from '@/composables/filter'\nimport { useForm } from '@/composables/form'\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { useItems } from '@/composables/list-items'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeTransitionProps } from '@/composables/transition'\n\n// Utilities\nimport { computed, mergeProps, nextTick, ref, shallowRef, watch } from 'vue'\nimport {\n  ensureValidVNode,\n  genericComponent,\n  IN_BROWSER,\n  matchesSelector,\n  noop,\n  omit,\n  propsFactory,\n  useRender,\n  wrapInArray,\n} from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { VFieldSlots } from '@/components/VField/VField'\nimport type { VInputSlots } from '@/components/VInput/VInput'\nimport type { FilterMatch } from '@/composables/filter'\nimport type { ListItem } from '@/composables/list-items'\nimport type { GenericProps, SelectItemKey } from '@/util'\n\nfunction highlightResult (text: string, matches: FilterMatch | undefined, length: number) {\n  if (matches == null) return text\n\n  if (Array.isArray(matches)) throw new Error('Multiple matches is not implemented')\n\n  return typeof matches === 'number' && ~matches\n    ? (\n      <>\n        <span class=\"v-autocomplete__unmask\">{ text.substr(0, matches) }</span>\n        <span class=\"v-autocomplete__mask\">{ text.substr(matches, length) }</span>\n        <span class=\"v-autocomplete__unmask\">{ text.substr(matches + length) }</span>\n      </>\n    )\n    : text\n}\n\ntype Primitive = string | number | boolean | symbol\n\ntype Val <T, ReturnObject extends boolean> = [T] extends [Primitive]\n  ? T\n  : (ReturnObject extends true ? T : any)\n\ntype Value <T, ReturnObject extends boolean, Multiple extends boolean> =\n  Multiple extends true\n    ? readonly Val<T, ReturnObject>[]\n    : Val<T, ReturnObject> | null\n\nexport const makeVAutocompleteProps = propsFactory({\n  autoSelectFirst: {\n    type: [Boolean, String] as PropType<boolean | 'exact'>,\n  },\n  clearOnSelect: Boolean,\n  search: String,\n\n  ...makeFilterProps({ filterKeys: ['title'] }),\n  ...makeSelectProps(),\n  ...omit(makeVTextFieldProps({\n    modelValue: null,\n    role: 'combobox',\n  }), ['validationValue', 'dirty', 'appendInnerIcon']),\n  ...makeTransitionProps({ transition: false }),\n}, 'VAutocomplete')\n\ntype ItemType<T> = T extends readonly (infer U)[] ? U : never\n\nexport const VAutocomplete = genericComponent<new <\n  T extends readonly any[],\n  Item = ItemType<T>,\n  ReturnObject extends boolean = false,\n  Multiple extends boolean = false,\n  V extends Value<Item, ReturnObject, Multiple> = Value<Item, ReturnObject, Multiple>\n>(\n  props: {\n    items?: T\n    itemTitle?: SelectItemKey<ItemType<T>>\n    itemValue?: SelectItemKey<ItemType<T>>\n    itemProps?: SelectItemKey<ItemType<T>>\n    returnObject?: ReturnObject\n    multiple?: Multiple\n    modelValue?: V | null\n    'onUpdate:modelValue'?: (value: V) => void\n  },\n  slots: Omit<VInputSlots & VFieldSlots, 'default'> & {\n    item: { item: ListItem<Item>, index: number, props: Record<string, unknown> }\n    chip: { item: ListItem<Item>, index: number, props: Record<string, unknown> }\n    selection: { item: ListItem<Item>, index: number }\n    'prepend-item': never\n    'append-item': never\n    'no-data': never\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VAutocomplete',\n\n  props: makeVAutocompleteProps(),\n\n  emits: {\n    'update:focused': (focused: boolean) => true,\n    'update:search': (value: any) => true,\n    'update:modelValue': (value: any) => true,\n    'update:menu': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const { t } = useLocale()\n    const vTextFieldRef = ref()\n    const isFocused = shallowRef(false)\n    const isPristine = shallowRef(true)\n    const listHasFocus = shallowRef(false)\n    const vMenuRef = ref<VMenu>()\n    const vVirtualScrollRef = ref<VVirtualScroll>()\n    const _menu = useProxiedModel(props, 'menu')\n    const menu = computed({\n      get: () => _menu.value,\n      set: v => {\n        if (_menu.value && !v && vMenuRef.value?.ΨopenChildren) return\n        _menu.value = v\n      },\n    })\n    const selectionIndex = shallowRef(-1)\n    const color = computed(() => vTextFieldRef.value?.color)\n    const label = computed(() => menu.value ? props.closeText : props.openText)\n    const { items, transformIn, transformOut } = useItems(props)\n    const { textColorClasses, textColorStyles } = useTextColor(color)\n    const search = useProxiedModel(props, 'search', '')\n    const model = useProxiedModel(\n      props,\n      'modelValue',\n      [],\n      v => transformIn(v === null ? [null] : wrapInArray(v)),\n      v => {\n        const transformed = transformOut(v)\n        return props.multiple ? transformed : (transformed[0] ?? null)\n      }\n    )\n    const counterValue = computed(() => {\n      return typeof props.counterValue === 'function' ? props.counterValue(model.value)\n        : typeof props.counterValue === 'number' ? props.counterValue\n        : model.value.length\n    })\n    const form = useForm()\n    const { filteredItems, getMatches } = useFilter(props, items, () => isPristine.value ? '' : search.value)\n\n    const displayItems = computed(() => {\n      if (props.hideSelected) {\n        return filteredItems.value.filter(filteredItem => !model.value.some(s => s.value === filteredItem.value))\n      }\n      return filteredItems.value\n    })\n\n    const hasChips = computed(() => !!(props.chips || slots.chip))\n    const hasSelectionSlot = computed(() => hasChips.value || !!slots.selection)\n\n    const selectedValues = computed(() => model.value.map(selection => selection.props.value))\n\n    const highlightFirst = computed(() => {\n      const selectFirst = props.autoSelectFirst === true ||\n        (props.autoSelectFirst === 'exact' && search.value === displayItems.value[0]?.title)\n      return selectFirst &&\n        displayItems.value.length > 0 &&\n        !isPristine.value &&\n        !listHasFocus.value\n    })\n\n    const menuDisabled = computed(() => (\n      (props.hideNoData && !displayItems.value.length) ||\n      props.readonly || form?.isReadonly.value\n    ))\n\n    const listRef = ref<VList>()\n    const { onListScroll, onListKeydown } = useScrolling(listRef, vTextFieldRef)\n    function onClear (e: MouseEvent) {\n      if (props.openOnClear) {\n        menu.value = true\n      }\n\n      search.value = ''\n    }\n    function onMousedownControl () {\n      if (menuDisabled.value) return\n\n      menu.value = true\n    }\n    function onMousedownMenuIcon (e: MouseEvent) {\n      if (menuDisabled.value) return\n\n      if (isFocused.value) {\n        e.preventDefault()\n        e.stopPropagation()\n      }\n      menu.value = !menu.value\n    }\n    function onKeydown (e: KeyboardEvent) {\n      if (props.readonly || form?.isReadonly.value) return\n\n      const selectionStart = vTextFieldRef.value.selectionStart\n      const length = model.value.length\n\n      if (\n        selectionIndex.value > -1 ||\n        ['Enter', 'ArrowDown', 'ArrowUp'].includes(e.key)\n      ) {\n        e.preventDefault()\n      }\n\n      if (['Enter', 'ArrowDown'].includes(e.key)) {\n        menu.value = true\n      }\n\n      if (['Escape'].includes(e.key)) {\n        menu.value = false\n      }\n\n      if (\n        highlightFirst.value &&\n        ['Enter', 'Tab'].includes(e.key) &&\n        !model.value.some(({ value }) => value === displayItems.value[0].value)\n      ) {\n        select(displayItems.value[0])\n      }\n\n      if (e.key === 'ArrowDown' && highlightFirst.value) {\n        listRef.value?.focus('next')\n      }\n\n      if (['Backspace', 'Delete'].includes(e.key)) {\n        if (\n          !props.multiple &&\n          hasSelectionSlot.value &&\n          model.value.length > 0 &&\n          !search.value\n        ) return select(model.value[0], false)\n\n        if (~selectionIndex.value) {\n          const originalSelectionIndex = selectionIndex.value\n          select(model.value[selectionIndex.value], false)\n\n          selectionIndex.value = originalSelectionIndex >= length - 1 ? (length - 2) : originalSelectionIndex\n        } else if (e.key === 'Backspace' && !search.value) {\n          selectionIndex.value = length - 1\n        }\n      }\n\n      if (!props.multiple) return\n\n      if (e.key === 'ArrowLeft') {\n        if (selectionIndex.value < 0 && selectionStart > 0) return\n\n        const prev = selectionIndex.value > -1\n          ? selectionIndex.value - 1\n          : length - 1\n\n        if (model.value[prev]) {\n          selectionIndex.value = prev\n        } else {\n          selectionIndex.value = -1\n          vTextFieldRef.value.setSelectionRange(search.value?.length, search.value?.length)\n        }\n      }\n\n      if (e.key === 'ArrowRight') {\n        if (selectionIndex.value < 0) return\n\n        const next = selectionIndex.value + 1\n\n        if (model.value[next]) {\n          selectionIndex.value = next\n        } else {\n          selectionIndex.value = -1\n          vTextFieldRef.value.setSelectionRange(0, 0)\n        }\n      }\n    }\n\n    function onChange (e: Event) {\n      if (matchesSelector(vTextFieldRef.value, ':autofill') || matchesSelector(vTextFieldRef.value, ':-webkit-autofill')) {\n        const item = items.value.find(item => item.title === (e.target as HTMLInputElement).value)\n        if (item) {\n          select(item)\n        }\n      }\n    }\n\n    function onAfterLeave () {\n      if (isFocused.value) {\n        isPristine.value = true\n        vTextFieldRef.value?.focus()\n      }\n    }\n\n    function onFocusin (e: FocusEvent) {\n      isFocused.value = true\n      setTimeout(() => {\n        listHasFocus.value = true\n      })\n    }\n    function onFocusout (e: FocusEvent) {\n      listHasFocus.value = false\n    }\n    function onUpdateModelValue (v: any) {\n      if (v == null || (v === '' && !props.multiple && !hasSelectionSlot.value)) model.value = []\n    }\n\n    const isSelecting = shallowRef(false)\n\n    /** @param set - null means toggle */\n    function select (item: ListItem | undefined, set: boolean | null = true) {\n      if (!item || item.props.disabled) return\n\n      if (props.multiple) {\n        const index = model.value.findIndex(selection => props.valueComparator(selection.value, item.value))\n        const add = set == null ? !~index : set\n\n        if (~index) {\n          const value = add ? [...model.value, item] : [...model.value]\n          value.splice(index, 1)\n          model.value = value\n        } else if (add) {\n          model.value = [...model.value, item]\n        }\n\n        if (props.clearOnSelect) {\n          search.value = ''\n        }\n      } else {\n        const add = set !== false\n        model.value = add ? [item] : []\n        search.value = add && !hasSelectionSlot.value ? item.title : ''\n\n        // watch for search watcher to trigger\n        nextTick(() => {\n          menu.value = false\n          isPristine.value = true\n        })\n      }\n    }\n\n    watch(isFocused, (val, oldVal) => {\n      if (val === oldVal) return\n\n      if (val) {\n        isSelecting.value = true\n        search.value = (props.multiple || hasSelectionSlot.value) ? '' : String(model.value.at(-1)?.props.title ?? '')\n        isPristine.value = true\n\n        nextTick(() => isSelecting.value = false)\n      } else {\n        if (!props.multiple && search.value == null) model.value = []\n        menu.value = false\n        if (!model.value.some(({ title }) => title === search.value)) search.value = ''\n        selectionIndex.value = -1\n      }\n    })\n\n    watch(search, val => {\n      if (!isFocused.value || isSelecting.value) return\n\n      if (val) menu.value = true\n\n      isPristine.value = !val\n    })\n\n    watch(menu, () => {\n      if (!props.hideSelected && menu.value && model.value.length) {\n        const index = displayItems.value.findIndex(\n          item => model.value.some(s => item.value === s.value)\n        )\n        IN_BROWSER && window.requestAnimationFrame(() => {\n          index >= 0 && vVirtualScrollRef.value?.scrollToIndex(index)\n        })\n      }\n    })\n\n    watch(() => props.items, (newVal, oldVal) => {\n      if (menu.value) return\n\n      if (isFocused.value && !oldVal.length && newVal.length) {\n        menu.value = true\n      }\n    })\n\n    useRender(() => {\n      const hasList = !!(\n        (!props.hideNoData || displayItems.value.length) ||\n        slots['prepend-item'] ||\n        slots['append-item'] ||\n        slots['no-data']\n      )\n      const isDirty = model.value.length > 0\n      const textFieldProps = VTextField.filterProps(props)\n\n      return (\n        <VTextField\n          ref={ vTextFieldRef }\n          { ...textFieldProps }\n          v-model={ search.value }\n          onUpdate:modelValue={ onUpdateModelValue }\n          v-model:focused={ isFocused.value }\n          validationValue={ model.externalValue }\n          counterValue={ counterValue.value }\n          dirty={ isDirty }\n          onChange={ onChange }\n          class={[\n            'v-autocomplete',\n            `v-autocomplete--${props.multiple ? 'multiple' : 'single'}`,\n            {\n              'v-autocomplete--active-menu': menu.value,\n              'v-autocomplete--chips': !!props.chips,\n              'v-autocomplete--selection-slot': !!hasSelectionSlot.value,\n              'v-autocomplete--selecting-index': selectionIndex.value > -1,\n            },\n            props.class,\n          ]}\n          style={ props.style }\n          readonly={ props.readonly }\n          placeholder={ isDirty ? undefined : props.placeholder }\n          onClick:clear={ onClear }\n          onMousedown:control={ onMousedownControl }\n          onKeydown={ onKeydown }\n        >\n          {{\n            ...slots,\n            default: () => (\n              <>\n                <VMenu\n                  ref={ vMenuRef }\n                  v-model={ menu.value }\n                  activator=\"parent\"\n                  contentClass=\"v-autocomplete__content\"\n                  disabled={ menuDisabled.value }\n                  eager={ props.eager }\n                  maxHeight={ 310 }\n                  openOnClick={ false }\n                  closeOnContentClick={ false }\n                  transition={ props.transition }\n                  onAfterLeave={ onAfterLeave }\n                  { ...props.menuProps }\n                >\n                  { hasList && (\n                    <VList\n                      ref={ listRef }\n                      selected={ selectedValues.value }\n                      selectStrategy={ props.multiple ? 'independent' : 'single-independent' }\n                      onMousedown={ (e: MouseEvent) => e.preventDefault() }\n                      onKeydown={ onListKeydown }\n                      onFocusin={ onFocusin }\n                      onFocusout={ onFocusout }\n                      onScrollPassive={ onListScroll }\n                      tabindex=\"-1\"\n                      aria-live=\"polite\"\n                      color={ props.itemColor ?? props.color }\n                      { ...props.listProps }\n                    >\n                      { slots['prepend-item']?.() }\n\n                      { !displayItems.value.length && !props.hideNoData && (slots['no-data']?.() ?? (\n                        <VListItem title={ t(props.noDataText) } />\n                      ))}\n\n                      <VVirtualScroll ref={ vVirtualScrollRef } renderless items={ displayItems.value }>\n                        { ({ item, index, itemRef }) => {\n                          const itemProps = mergeProps(item.props, {\n                            ref: itemRef,\n                            key: index,\n                            active: (highlightFirst.value && index === 0) ? true : undefined,\n                            onClick: () => select(item, null),\n                          })\n\n                          return slots.item?.({\n                            item,\n                            index,\n                            props: itemProps,\n                          }) ?? (\n                            <VListItem { ...itemProps } role=\"option\">\n                            {{\n                              prepend: ({ isSelected }) => (\n                                <>\n                                  { props.multiple && !props.hideSelected ? (\n                                    <VCheckboxBtn\n                                      key={ item.value }\n                                      modelValue={ isSelected }\n                                      ripple={ false }\n                                      tabindex=\"-1\"\n                                    />\n                                  ) : undefined }\n\n                                  { item.props.prependAvatar && (\n                                    <VAvatar image={ item.props.prependAvatar } />\n                                  )}\n\n                                  { item.props.prependIcon && (\n                                    <VIcon icon={ item.props.prependIcon } />\n                                  )}\n                                </>\n                              ),\n                              title: () => {\n                                return isPristine.value\n                                  ? item.title\n                                  : highlightResult(item.title, getMatches(item)?.title, search.value?.length ?? 0)\n                              },\n                            }}\n                          </VListItem>\n                          )\n                        }}\n                      </VVirtualScroll>\n\n                      { slots['append-item']?.() }\n                    </VList>\n                  )}\n                </VMenu>\n\n                { model.value.map((item, index) => {\n                  function onChipClose (e: Event) {\n                    e.stopPropagation()\n                    e.preventDefault()\n\n                    select(item, false)\n                  }\n\n                  const slotProps = {\n                    'onClick:close': onChipClose,\n                    onKeydown (e: KeyboardEvent) {\n                      if (e.key !== 'Enter' && e.key !== ' ') return\n\n                      e.preventDefault()\n                      e.stopPropagation()\n\n                      onChipClose(e)\n                    },\n                    onMousedown (e: MouseEvent) {\n                      e.preventDefault()\n                      e.stopPropagation()\n                    },\n                    modelValue: true,\n                    'onUpdate:modelValue': undefined,\n                  }\n\n                  const hasSlot = hasChips.value ? !!slots.chip : !!slots.selection\n                  const slotContent = hasSlot\n                    ? ensureValidVNode(\n                      hasChips.value\n                        ? slots.chip!({ item, index, props: slotProps })\n                        : slots.selection!({ item, index })\n                    )\n                    : undefined\n\n                  if (hasSlot && !slotContent) return undefined\n\n                  return (\n                    <div\n                      key={ item.value }\n                      class={[\n                        'v-autocomplete__selection',\n                        index === selectionIndex.value && [\n                          'v-autocomplete__selection--selected',\n                          textColorClasses.value,\n                        ],\n                      ]}\n                      style={ index === selectionIndex.value ? textColorStyles.value : {} }\n                    >\n                      { hasChips.value ? (\n                        !slots.chip ? (\n                          <VChip\n                            key=\"chip\"\n                            closable={ props.closableChips }\n                            size=\"small\"\n                            text={ item.title }\n                            disabled={ item.props.disabled }\n                            { ...slotProps }\n                          />\n                        ) : (\n                          <VDefaultsProvider\n                            key=\"chip-defaults\"\n                            defaults={{\n                              VChip: {\n                                closable: props.closableChips,\n                                size: 'small',\n                                text: item.title,\n                              },\n                            }}\n                          >\n                            { slotContent }\n                          </VDefaultsProvider>\n                        )\n                      ) : (\n                        slotContent ?? (\n                          <span class=\"v-autocomplete__selection-text\">\n                            { item.title }\n                            { props.multiple && (index < model.value.length - 1) && (\n                              <span class=\"v-autocomplete__selection-comma\">,</span>\n                            )}\n                          </span>\n                        )\n                      )}\n                    </div>\n                  )\n                })}\n              </>\n            ),\n            'append-inner': (...args) => (\n              <>\n                { slots['append-inner']?.(...args) }\n                { props.menuIcon ? (\n                  <VIcon\n                    class=\"v-autocomplete__menu-icon\"\n                    icon={ props.menuIcon }\n                    onMousedown={ onMousedownMenuIcon }\n                    onClick={ noop }\n                    aria-label={ t(label.value) }\n                    title={ t(label.value) }\n                    tabindex=\"-1\"\n                  />\n                ) : undefined }\n              </>\n            ),\n          }}\n        </VTextField>\n      )\n    })\n\n    return forwardRefs({\n      isFocused,\n      isPristine,\n      menu,\n      search,\n      filteredItems,\n      select,\n    }, vTextFieldRef)\n  },\n})\n\nexport type VAutocomplete = InstanceType<typeof VAutocomplete>\n","/* eslint-disable max-statements */\n/* eslint-disable no-labels */\n\n// Utilities\nimport { computed, ref, unref, watchEffect } from 'vue'\nimport { getPropertyFromItem, propsFactory, wrapInArray } from '@/util'\n\n// Types\nimport type { PropType, Ref } from 'vue'\nimport type { MaybeRef } from '@/util'\n\n/**\n * - match without highlight\n * - single match (index), length already known\n * - single match (start, end)\n * - multiple matches (start, end), probably shouldn't overlap\n */\nexport type FilterMatch = boolean | number | [number, number] | [number, number][]\nexport type FilterFunction = (value: string, query: string, item?: InternalItem) => FilterMatch\nexport type FilterKeyFunctions = Record<string, FilterFunction>\nexport type FilterKeys = string | string[]\nexport type FilterMode = 'some' | 'every' | 'union' | 'intersection'\n\nexport interface FilterProps {\n  customFilter?: FilterFunction\n  customKeyFilter?: FilterKeyFunctions\n  filterKeys?: FilterKeys\n  filterMode?: FilterMode\n  noFilter?: boolean\n}\n\nexport interface InternalItem<T = any> {\n  value: any\n  raw: T\n}\n\n// Composables\nexport const defaultFilter: FilterFunction = (value, query, item) => {\n  if (value == null || query == null) return -1\n\n  return value.toString().toLocaleLowerCase().indexOf(query.toString().toLocaleLowerCase())\n}\n\nexport const makeFilterProps = propsFactory({\n  customFilter: Function as PropType<FilterFunction>,\n  customKeyFilter: Object as PropType<FilterKeyFunctions>,\n  filterKeys: [Array, String] as PropType<FilterKeys>,\n  filterMode: {\n    type: String as PropType<FilterMode>,\n    default: 'intersection',\n  },\n  noFilter: Boolean,\n}, 'filter')\n\nexport function filterItems (\n  items: readonly (readonly [item: InternalItem, transformed: {}])[] | readonly InternalItem[],\n  query: string,\n  options?: {\n    customKeyFilter?: FilterKeyFunctions\n    default?: FilterFunction\n    filterKeys?: FilterKeys\n    filterMode?: FilterMode\n    noFilter?: boolean\n  },\n) {\n  const array: { index: number, matches: Record<string, FilterMatch> }[] = []\n  // always ensure we fall back to a functioning filter\n  const filter = options?.default ?? defaultFilter\n  const keys = options?.filterKeys ? wrapInArray(options.filterKeys) : false\n  const customFiltersLength = Object.keys(options?.customKeyFilter ?? {}).length\n\n  if (!items?.length) return array\n\n  loop:\n  for (let i = 0; i < items.length; i++) {\n    const [item, transformed = item] = wrapInArray(items[i]) as readonly [InternalItem, {}]\n    const customMatches: Record<string, FilterMatch> = {}\n    const defaultMatches: Record<string, FilterMatch> = {}\n    let match: FilterMatch = -1\n\n    if ((query || customFiltersLength > 0) && !options?.noFilter) {\n      if (typeof item === 'object') {\n        const filterKeys = keys || Object.keys(transformed)\n\n        for (const key of filterKeys) {\n          const value = getPropertyFromItem(transformed, key)\n          const keyFilter = options?.customKeyFilter?.[key]\n\n          match = keyFilter\n            ? keyFilter(value, query, item)\n            : filter(value, query, item)\n\n          if (match !== -1 && match !== false) {\n            if (keyFilter) customMatches[key] = match\n            else defaultMatches[key] = match\n          } else if (options?.filterMode === 'every') {\n            continue loop\n          }\n        }\n      } else {\n        match = filter(item, query, item)\n        if (match !== -1 && match !== false) {\n          defaultMatches.title = match\n        }\n      }\n\n      const defaultMatchesLength = Object.keys(defaultMatches).length\n      const customMatchesLength = Object.keys(customMatches).length\n\n      if (!defaultMatchesLength && !customMatchesLength) continue\n\n      if (\n        options?.filterMode === 'union' &&\n        customMatchesLength !== customFiltersLength &&\n        !defaultMatchesLength\n      ) continue\n\n      if (\n        options?.filterMode === 'intersection' &&\n        (\n          customMatchesLength !== customFiltersLength ||\n          !defaultMatchesLength\n        )\n      ) continue\n    }\n\n    array.push({ index: i, matches: { ...defaultMatches, ...customMatches } })\n  }\n\n  return array\n}\n\nexport function useFilter <T extends InternalItem> (\n  props: FilterProps,\n  items: MaybeRef<T[]>,\n  query: Ref<string | undefined> | (() => string | undefined),\n  options?: {\n    transform?: (item: T) => {}\n    customKeyFilter?: MaybeRef<FilterKeyFunctions | undefined>\n  }\n) {\n  const filteredItems: Ref<T[]> = ref([])\n  const filteredMatches: Ref<Map<unknown, Record<string, FilterMatch>>> = ref(new Map())\n  const transformedItems = computed(() => (\n    options?.transform\n      ? unref(items).map(item => ([item, options.transform!(item)] as const))\n      : unref(items)\n  ))\n\n  watchEffect(() => {\n    const _query = typeof query === 'function' ? query() : unref(query)\n    const strQuery = (\n      typeof _query !== 'string' &&\n      typeof _query !== 'number'\n    ) ? '' : String(_query)\n\n    const results = filterItems(\n      transformedItems.value,\n      strQuery,\n      {\n        customKeyFilter: {\n          ...props.customKeyFilter,\n          ...unref(options?.customKeyFilter),\n        },\n        default: props.customFilter,\n        filterKeys: props.filterKeys,\n        filterMode: props.filterMode,\n        noFilter: props.noFilter,\n      },\n    )\n\n    const originalItems = unref(items)\n\n    const _filteredItems: typeof filteredItems['value'] = []\n    const _filteredMatches: typeof filteredMatches['value'] = new Map()\n    results.forEach(({ index, matches }) => {\n      const item = originalItems[index]\n      _filteredItems.push(item)\n      _filteredMatches.set(item.value, matches)\n    })\n    filteredItems.value = _filteredItems\n    filteredMatches.value = _filteredMatches\n  })\n\n  function getMatches (item: T) {\n    return filteredMatches.value.get(item.value)\n  }\n\n  return { filteredItems, filteredMatches, getMatches }\n}\n"],"names":["highlightResult","text","matches","length","Array","isArray","Error","_createVNode","_Fragment","substr","makeVAutocompleteProps","propsFactory","autoSelectFirst","type","Boolean","String","clearOnSelect","search","makeFilterProps","filterKeys","makeSelectProps","omit","makeVTextFieldProps","modelValue","role","makeTransitionProps","transition","VAutocomplete","genericComponent","name","props","emits","focused","value","setup","_ref","slots","t","useLocale","vTextFieldRef","ref","isFocused","shallowRef","isPristine","listHasFocus","vMenuRef","vVirtualScrollRef","_menu","useProxiedModel","menu","computed","get","set","v","ΨopenChildren","selectionIndex","color","label","closeText","openText","items","transformIn","transformOut","useItems","textColorClasses","textColorStyles","useTextColor","model","wrapInArray","transformed","multiple","counterValue","form","useForm","filteredItems","getMatches","useFilter","displayItems","hideSelected","filter","filteredItem","some","s","hasChips","chips","chip","hasSelectionSlot","selection","selectedValues","map","highlightFirst","selectFirst","title","menuDisabled","hideNoData","readonly","isReadonly","listRef","onListScroll","onListKeydown","useScrolling","onClear","e","openOnClear","onMousedownControl","onMousedownMenuIcon","preventDefault","stopPropagation","onKeydown","selectionStart","includes","key","_ref2","select","focus","originalSelectionIndex","prev","setSelectionRange","next","onChange","matchesSelector","item","find","target","onAfterLeave","onFocusin","setTimeout","onFocusout","onUpdateModelValue","isSelecting","arguments","undefined","disabled","index","findIndex","valueComparator","add","splice","nextTick","watch","val","oldVal","at","_ref3","IN_BROWSER","window","requestAnimationFrame","scrollToIndex","newVal","useRender","hasList","isDirty","textFieldProps","VTextField","filterProps","_mergeProps","$event","externalValue","class","style","placeholder","default","VMenu","eager","menuProps","VList","itemColor","listProps","VListItem","noDataText","VVirtualScroll","_ref4","itemRef","itemProps","mergeProps","active","onClick","prepend","_ref5","isSelected","VCheckboxBtn","prependAvatar","VAvatar","prependIcon","VIcon","onChipClose","slotProps","onMousedown","hasSlot","slotContent","ensureValidVNode","VDefaultsProvider","VChip","closable","closableChips","size","_createTextVNode","_len","args","_key","menuIcon","noop","forwardRefs","defaultFilter","query","toString","toLocaleLowerCase","indexOf","customFilter","Function","customKeyFilter","Object","filterMode","noFilter","filterItems","options","array","keys","customFiltersLength","loop","i","customMatches","defaultMatches","match","getPropertyFromItem","keyFilter","defaultMatchesLength","customMatchesLength","push","filteredMatches","Map","transformedItems","transform","unref","watchEffect","_query","strQuery","results","originalItems","_filteredItems","_filteredMatches","forEach"],"sourceRoot":""}