{"version":3,"file":"js/37.a23969bd.js","mappings":"wPAeO,MAAMA,GAAwBC,EAAAA,EAAAA,GAAa,CAChDC,cAAeC,QACfC,kBAAmB,CACjBC,KAAMC,EAAAA,GACNC,QAAS,8BAGRC,EAAAA,EAAAA,IAA2B,CAC5BC,UAAW,eACXC,SAAU,iBAEX,gBAEUC,GAAeC,EAAAA,EAAAA,KAAAA,CAMqB,CAC/CC,KAAM,eAENC,MAAOd,IAEPe,MAAO,CACL,oBAAsBC,IAAe,EACrC,uBAAyBA,IAAmB,GAG9CC,KAAAA,CAAOH,EAAKI,GAAa,IAAX,MAAEC,GAAOD,EACrB,MAAMhB,GAAgBkB,EAAAA,EAAAA,GAAgBN,EAAO,iBACvCO,GAAQD,EAAAA,EAAAA,GAAgBN,EAAO,cAErC,SAASQ,EAAUC,GACbrB,EAAcc,QAChBd,EAAcc,OAAQ,EAE1B,CAEA,MAAMP,GAAYe,EAAAA,EAAAA,KAAS,IAClBtB,EAAcc,MACjBF,EAAMV,kBACNU,EAAML,YAGNC,GAAWc,EAAAA,EAAAA,KAAS,IACjBtB,EAAcc,MACjBF,EAAMV,kBACNU,EAAMJ,WAwBZ,OArBAe,EAAAA,EAAAA,IAAU,KACR,MAAMC,GAAeC,EAAAA,EAAAA,IAAKC,EAAAA,GAAkBC,YAAYf,GAAQ,CAAC,eACjE,OAAAgB,EAAAA,EAAAA,IAAAF,EAAAA,IAAAG,EAAAA,EAAAA,IAESL,EAAY,YACPL,EAAML,MAAK,uBAAAgB,GAAXX,EAAML,MAAKgB,EAOCV,GAAQ,MANvB,CACL,iBACAR,EAAMmB,OACP,MACOnB,EAAMoB,MAAK,0BAGPzB,EAAUO,MAAK,SAChBN,EAASM,MAAK,eACVd,EAAcc,MAAQ,aAAUmB,IACrChB,EAAK,IAKd,CAAC,CACV,G,2IC7EK,MAAMiB,GAAsBnC,EAAAA,EAAAA,GAAa,CAC9CoC,MAAO,CACLhC,KAAMF,QACNI,SAAS,OAGR+B,EAAAA,EAAAA,SACAC,EAAAA,EAAAA,MACF,cAEUC,GAAa5B,EAAAA,EAAAA,KAAAA,CAAmB,CAC3CC,KAAM,aAENC,MAAOsB,IAEPnB,KAAAA,CAAOH,EAAKI,GAAa,IAAX,MAAEC,GAAOD,EACrB,MAAM,WAAEuB,IAAeC,EAAAA,EAAAA,MAevB,OAbAjB,EAAAA,EAAAA,IAAU,KAAAK,EAAAA,EAAAA,IAAAhB,EAAA6B,IAAA,OAEC,CACL,cACA,CAAE,qBAAsB7B,EAAMuB,OAC9BI,EAAWzB,MACXF,EAAMmB,OACP,MACOnB,EAAMoB,OACJf,KAIP,CAAC,CACV,G,sVCaK,MAAMyB,GAAkB3C,EAAAA,EAAAA,GAAa,CAC1C4C,MAAO1C,QACP2C,cAAe3C,QACf4C,UAAW,CACT1C,KAAM2C,OACNzC,QAAS,kBAEX0C,SAAU,CACR5C,KAAM2C,OACNzC,QAAS,iBAEX2C,MAAO/C,QACPgD,WAAYhD,QACZiD,aAAcjD,QACdkD,UAAW,CACThD,KAAMiD,QAERC,KAAMpD,QACNqD,SAAU,CACRnD,KAAMC,EAAAA,GACNC,QAAS,aAEXkD,UAAW,CACTpD,KAAMiD,QAERI,SAAUvD,QACVwD,WAAY,CACVtD,KAAM2C,OACNzC,QAAS,uBAEXqD,YAAazD,QACb0D,UAAWb,WAERc,EAAAA,EAAAA,IAAe,CAAEC,cAAc,KACjC,UAEUC,GAAmB/D,EAAAA,EAAAA,GAAa,IACxC2C,QACAjB,EAAAA,EAAAA,KAAKsC,EAAAA,EAAAA,GAAoB,CAC1BC,WAAY,KACZC,KAAM,aACJ,CAAC,kBAAmB,QAAS,wBAC9BC,EAAAA,EAAAA,GAAoB,CAAEC,WAAY,CAAEC,UAAWC,EAAAA,MACjD,WAIUC,GAAU5D,EAAAA,EAAAA,KAAAA,CAyB0B,CAC/CC,KAAM,UAENC,MAAOkD,IAEPjD,MAAO,CACL,iBAAmB0D,IAAqB,EACxC,oBAAsBzD,IAAe,EACrC,cAAgB0D,IAAgB,GAGlCzD,KAAAA,CAAOH,EAAKI,GAAa,IAAX,MAAEC,GAAOD,EACrB,MAAM,EAAEyD,IAAMC,EAAAA,EAAAA,MACRC,GAAgBC,EAAAA,EAAAA,MAChBC,GAAWD,EAAAA,EAAAA,MACXE,GAAoBF,EAAAA,EAAAA,MACpBG,GAAQ7D,EAAAA,EAAAA,GAAgBN,EAAO,QAC/ByC,GAAO/B,EAAAA,EAAAA,IAAS,CACpB0D,IAAKA,IAAMD,EAAMjE,MACjBmE,IAAK5D,IACC0D,EAAMjE,QAAUO,GAAKwD,EAAS/D,OAAOoE,gBACzCH,EAAMjE,MAAQO,EAAC,KAGb,MAAE8D,EAAK,YAAEC,EAAW,aAAEC,IAAiBC,EAAAA,EAAAA,IAAS1E,GAChDO,GAAQD,EAAAA,EAAAA,GACZN,EACA,aACA,IACAS,GAAK+D,EAAkB,OAAN/D,EAAa,CAAC,OAAQkE,EAAAA,EAAAA,IAAYlE,MACnDA,IACE,MAAMmE,EAAcH,EAAahE,GACjC,OAAOT,EAAM4C,SAAWgC,EAAeA,EAAY,IAAM,IAAK,IAG5DC,GAAenE,EAAAA,EAAAA,KAAS,IACS,oBAAvBV,EAAM6E,aAA8B7E,EAAM6E,aAAatE,EAAML,OACzC,kBAAvBF,EAAM6E,aAA4B7E,EAAM6E,aAC/CtE,EAAML,MAAM4E,SAEZC,GAAOC,EAAAA,EAAAA,MACPC,GAAiBvE,EAAAA,EAAAA,KAAS,IAAMH,EAAML,MAAMgF,KAAIC,GAAaA,EAAUjF,UACvEkF,GAAYC,EAAAA,EAAAA,KAAW,GACvBC,GAAQ5E,EAAAA,EAAAA,KAAS,IAAM+B,EAAKvC,MAAQF,EAAMiC,UAAYjC,EAAMmC,WAElE,IACIoD,EADAC,EAAuB,GAG3B,MAAMC,GAAe/E,EAAAA,EAAAA,KAAS,IACxBV,EAAMsC,aACDiC,EAAMrE,MAAMwF,QAAOC,IAASpF,EAAML,MAAM0F,MAAKC,GAAK7F,EAAM8F,gBAAgBD,EAAGF,OAE7EpB,EAAMrE,QAGT6F,GAAerF,EAAAA,EAAAA,KAAS,IAC3BV,EAAMqC,aAAeoD,EAAavF,MAAM4E,QACzC9E,EAAMgG,UAAYjB,GAAMkB,WAAW/F,QAG/BgG,GAAoBxF,EAAAA,EAAAA,KAAS,KAC1B,IACFV,EAAM2C,UACTwD,eAAgB,IACVnG,EAAM2C,WAAWwD,gBAAkB,CAAC,EACxC,gBAAiB,eAKjBC,GAAUpC,EAAAA,EAAAA,OACV,aAAEqC,EAAY,cAAEC,IAAkBC,EAAAA,EAAAA,GAAaH,EAASrC,GAC9D,SAASyC,EAASC,GACZzG,EAAM8C,cACRL,EAAKvC,OAAQ,EAEjB,CACA,SAASwG,IACHX,EAAa7F,QAEjBuC,EAAKvC,OAASuC,EAAKvC,MACrB,CACA,SAASyG,EAAWF,GAClB,IAAKA,EAAEG,KAAO5G,EAAMgG,UAAYjB,GAAMkB,WAAW/F,MAAO,OAEpD,CAAC,QAAS,IAAK,YAAa,UAAW,OAAQ,OAAO2G,SAASJ,EAAEG,MACnEH,EAAEK,iBAGA,CAAC,QAAS,YAAa,KAAKD,SAASJ,EAAEG,OACzCnE,EAAKvC,OAAQ,GAGX,CAAC,SAAU,OAAO2G,SAASJ,EAAEG,OAC/BnE,EAAKvC,OAAQ,GAGD,SAAVuG,EAAEG,IACJR,EAAQlG,OAAO6G,MAAM,SACF,QAAVN,EAAEG,KACXR,EAAQlG,OAAO6G,MAAM,QAIvB,MAAMC,EAA4B,IAElC,SAASC,EAAgBR,GACvB,MAAMS,EAAmC,IAAjBT,EAAEG,IAAI9B,OACxBqC,GAAcV,EAAEW,UAAYX,EAAEY,UAAYZ,EAAEa,OAClD,OAAOJ,GAAmBC,CAC5B,CAEA,GAAInH,EAAM4C,WAAaqE,EAAeR,GAAI,OAE1C,MAAMc,EAAMC,YAAYD,MACpBA,EAAMhC,EAAyByB,IACjCxB,EAAuB,IAEzBA,GAAwBiB,EAAEG,IAAIa,cAC9BlC,EAAyBgC,EAEzB,MAAM5B,EAAOpB,EAAMrE,MAAMwH,MAAK/B,GAAQA,EAAKgC,MAAMF,cAAcG,WAAWpC,KAC1E,QAAanE,IAATsE,EAAoB,CACtBpF,EAAML,MAAQ,CAACyF,GACf,MAAMkC,EAAQpC,EAAavF,MAAM4H,QAAQnC,GACzCoC,EAAAA,IAAcC,OAAOC,uBAAsB,KACzCJ,GAAS,GAAK3D,EAAkBhE,OAAOgI,cAAcL,EAAM,GAE/D,CACF,CAGA,SAASM,EAAQxC,GAA4C,IAA5BtB,IAAmB+D,UAAAtD,OAAA,QAAAzD,IAAA+G,UAAA,KAAAA,UAAA,GAClD,IAAIzC,EAAK3F,MAAMqI,SAEf,GAAIrI,EAAM4C,SAAU,CAClB,MAAMiF,EAAQtH,EAAML,MAAMoI,WAAUnD,GAAanF,EAAM8F,gBAAgBX,EAAUjF,MAAOyF,EAAKzF,SACvFqI,EAAa,MAAPlE,IAAgBwD,EAAQxD,EAEpC,IAAKwD,EAAO,CACV,MAAM3H,EAAQqI,EAAM,IAAIhI,EAAML,MAAOyF,GAAQ,IAAIpF,EAAML,OACvDA,EAAMsI,OAAOX,EAAO,GACpBtH,EAAML,MAAQA,CAChB,MAAWqI,IACThI,EAAML,MAAQ,IAAIK,EAAML,MAAOyF,GAEnC,KAAO,CACL,MAAM4C,GAAc,IAARlE,EACZ9D,EAAML,MAAQqI,EAAM,CAAC5C,GAAQ,IAE7B8C,EAAAA,EAAAA,KAAS,KACPhG,EAAKvC,OAAQ,CAAK,GAEtB,CACF,CACA,SAASwI,EAAQjC,GACVL,EAAQlG,OAAOyI,IAAIC,SAASnC,EAAEoC,iBACjCpG,EAAKvC,OAAQ,EAEjB,CACA,SAAS4I,IACH1D,EAAUlF,OACZ6D,EAAc7D,OAAO6G,OAEzB,CACA,SAASgC,EAAWtC,GAClBrB,EAAUlF,OAAQ,CACpB,CACA,SAAS8I,GAAevI,GACtB,GAAS,MAALA,EAAWF,EAAML,MAAQ,QACxB,IAAI+I,EAAAA,EAAAA,IAAgBlF,EAAc7D,MAAO,eAAgB+I,EAAAA,EAAAA,IAAgBlF,EAAc7D,MAAO,qBAAsB,CACvH,MAAMyF,EAAOpB,EAAMrE,MAAMwH,MAAK/B,GAAQA,EAAKgC,QAAUlH,IACjDkF,GACFwC,EAAOxC,EAEX,MAAW5B,EAAc7D,QACvB6D,EAAc7D,MAAMA,MAAQ,GAEhC,CAuPA,OArPAgJ,EAAAA,EAAAA,IAAMzG,GAAM,KACV,IAAKzC,EAAMsC,cAAgBG,EAAKvC,OAASK,EAAML,MAAM4E,OAAQ,CAC3D,MAAM+C,EAAQpC,EAAavF,MAAMoI,WAC/B3C,GAAQpF,EAAML,MAAM0F,MAAKC,GAAK7F,EAAM8F,gBAAgBD,EAAE3F,MAAOyF,EAAKzF,WAEpE6H,EAAAA,IAAcC,OAAOC,uBAAsB,KACzCJ,GAAS,GAAK3D,EAAkBhE,OAAOgI,cAAcL,EAAM,GAE/D,MAGFqB,EAAAA,EAAAA,KAAM,IAAMlJ,EAAMuE,QAAO,CAAC4E,EAAQC,KAC5B3G,EAAKvC,OAELkF,EAAUlF,QAAUkJ,EAAOtE,QAAUqE,EAAOrE,SAC9CrC,EAAKvC,OAAQ,EACf,KAGFS,EAAAA,EAAAA,IAAU,KACR,MAAM0I,KAAcrJ,EAAM+B,QAAS1B,EAAMiJ,MACnCC,MACFvJ,EAAMqC,YAAcoD,EAAavF,MAAM4E,QACzCzE,EAAM,iBACNA,EAAM,gBACNA,EAAM,YAEFmJ,EAAUjJ,EAAML,MAAM4E,OAAS,EAC/B2E,EAAiBC,EAAAA,EAAW3I,YAAYf,GAExC2J,EAAcH,IACjBpE,EAAUlF,OACXF,EAAMsF,QACLtF,EAAM4J,2BACLvI,EAAYrB,EAAM2J,YAEtB,OAAA3I,EAAAA,EAAAA,IAAA0I,EAAAA,GAAAzI,EAAAA,EAAAA,IAAA,KAEU8C,GACD0F,EAAc,YACNlJ,EAAML,MAAMgF,KAAIzE,GAAKA,EAAET,MAAME,QAAO2J,KAAK,MAAK,sBACrCb,GAAa,QACjB5D,EAAUlF,MAAK,mBAAAgB,GAAfkE,EAAUlF,MAAKgB,EAAA,gBACfX,EAAMuJ,cAAa,aACtBjF,EAAa3E,MAAK,MACzBsJ,EAAO,MACR,CACL,WACA,CACE,wBAAyB/G,EAAKvC,MAC9B,oBAAqBF,EAAM+B,MAC3B,CAAE,cAAY/B,EAAM4C,SAAW,WAAa,YAAa,EACzD,qBAAsBrC,EAAML,MAAM4E,OAClC,6BAA8BzE,EAAM8E,WAEtCnF,EAAMmB,OACP,MACOnB,EAAMoB,MAAK,6BAELuI,EAAW,gBACTnD,EAAO,sBACDE,EAAkB,OAC/BgC,EAAM,UACH/B,EAAS,aACR9C,EAAEyB,EAAMpF,OAAM,MACnB2D,EAAEyB,EAAMpF,SAAM,IAGjBG,EACHZ,QAASA,KAAAuB,EAAAA,EAAAA,IAAA+I,EAAAA,GAAA,OAAA/I,EAAAA,EAAAA,IAAAgJ,EAAAA,GAAA/I,EAAAA,EAAAA,IAAC,CAAD,IAGGgD,EAAQ,WACJxB,EAAKvC,MAAK,sBAAAgB,GAAVuB,EAAKvC,MAAKgB,EAAA,6DAGT6E,EAAa7F,MAAK,MACrBF,EAAMoC,MAAK,UACP,IAAG,aACD,EAAK,qBACG,EAAK,WACdpC,EAAMuD,WAAU,aACduF,GACV5C,EAAkBhG,OAAK,CAAAT,QAAAA,IAAA,CAE1B8J,IAAOvI,EAAAA,EAAAA,IAAAiJ,EAAAA,IAAAhJ,EAAAA,EAAAA,IAAA,KAECmF,EAAO,SACFnB,EAAe/E,MAAK,eACdF,EAAM4C,SAAW,cAAgB,qBAAoB,YACvD6D,GAAkBA,EAAEK,iBAAgB,UACvCR,EAAa,UACbyC,EAAS,gBACH1C,EAAY,yCAGtBrG,EAAM+C,WAAa/C,EAAMkK,OAC5BlK,EAAMuC,WAAS,CAAA9C,QAAAA,IAAA,CAElBY,EAAM,qBAELoF,EAAavF,MAAM4E,SAAW9E,EAAMqC,aAAehC,EAAM,iBAAcW,EAAAA,EAAAA,IAAAmJ,EAAAA,EAAA,OACrDtG,EAAE7D,EAAM6C,aAAW,QACtC7B,EAAAA,EAAAA,IAAAoJ,EAAAA,EAAA,KAEoBlG,EAAiB,oBAAsBuB,EAAavF,OAAK,CAAAT,QAC3E4K,IAA8B,IAA7B,KAAE1E,EAAI,MAAEkC,EAAK,QAAEyC,GAASD,EACzB,MAAME,GAAYC,EAAAA,EAAAA,IAAW7E,EAAK3F,MAAO,CACvCgE,IAAKsG,EACL1D,IAAKiB,EACL4C,QAASA,IAAMtC,EAAOxC,EAAM,QAG9B,OAAOtF,EAAMsF,OAAO,CAClBA,OACAkC,QACA7H,MAAOuK,MACPvJ,EAAAA,EAAAA,IAAAmJ,EAAAA,GAAAlJ,EAAAA,EAAAA,IACgBsJ,EAAS,kBAErBG,QAASC,IAAA,IAAC,WAAEC,GAAYD,EAAA,OAAA3J,EAAAA,EAAAA,IAAA+I,EAAAA,GAAA,MAElB/J,EAAM4C,WAAa5C,EAAMsC,cAAYtB,EAAAA,EAAAA,IAAAnB,EAAAA,EAAA,KAE7B8F,EAAKzF,MAAK,WACH0K,EAAU,QACd,EAAK,0BAGdvJ,EAEFsE,EAAK3F,MAAM6K,gBAAa7J,EAAAA,EAAAA,IAAA8J,EAAAA,EAAA,OACPnF,EAAK3F,MAAM6K,eAAa,MAGzClF,EAAK3F,MAAM+K,cAAW/J,EAAAA,EAAAA,IAAAgK,EAAAA,EAAA,MACRrF,EAAK3F,MAAM+K,aAAW,OACrC,GAKV,IAIH1K,EAAM,yBAKZE,EAAML,MAAMgF,KAAI,CAACS,EAAMkC,KACvB,SAASoD,EAAaxE,GACpBA,EAAEyE,kBACFzE,EAAEK,iBAEFqB,EAAOxC,GAAM,EACf,CAEA,MAAMwF,EAAY,CAChB,gBAAiBF,EACjBtE,SAAAA,CAAWF,GACK,UAAVA,EAAEG,KAA6B,MAAVH,EAAEG,MAE3BH,EAAEK,iBACFL,EAAEyE,kBAEFD,EAAYxE,GACd,EACA2E,WAAAA,CAAa3E,GACXA,EAAEK,iBACFL,EAAEyE,iBACJ,EACA9H,YAAY,EACZ,2BAAuB/B,GAGnBgK,EAAUhC,IAAahJ,EAAMiJ,OAASjJ,EAAM8E,UAC5CmG,EAAcD,GAChBE,EAAAA,EAAAA,IACAlC,EACIhJ,EAAMiJ,KAAM,CAAE3D,OAAMkC,QAAO7H,MAAOmL,IAClC9K,EAAM8E,UAAW,CAAEQ,OAAMkC,gBAE7BxG,EAEJ,IAAIgK,GAAYC,EAEhB,OAAAtK,EAAAA,EAAAA,IAAA,WACa2E,EAAKzF,MAAK,8BACjBmJ,EACChJ,EAAMiJ,MAOWtI,EAAAA,EAAAA,IAAAwK,EAAAA,EAAA,8BAKJ,CACRC,MAAO,CACLC,SAAU1L,EAAMgC,cAChB2J,KAAM,QACNC,KAAMjG,EAAKgC,SAEd,CAAAlI,QAAAA,IAAA,CAEC6L,MApBKtK,EAAAA,EAAAA,IAAAyK,EAAAA,GAAAxK,EAAAA,EAAAA,IAAA,qBAGIjB,EAAMgC,cAAa,kBAEvB2D,EAAKgC,MAAK,SACNhC,EAAK3F,MAAMqI,UACjB8C,GAAS,MAiBlBG,IAAWtK,EAAAA,EAAAA,IAAA,2CAEL2E,EAAKgC,MACL3H,EAAM4C,UAAaiF,EAAQtH,EAAML,MAAM4E,OAAS,IAAE9D,EAAAA,EAAAA,IAAA,6CAAA6K,EAAAA,EAAAA,IAAA,UAKzD,MAMX,eAAgB,mBAAAC,EAAA1D,UAAAtD,OAAIiH,EAAI,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAJF,EAAIE,GAAA7D,UAAA6D,GAAA,OAAAjL,EAAAA,EAAAA,IAAA+I,EAAAA,GAAA,MAElB1J,EAAM,qBAAqB0L,GAC3B/L,EAAM0C,UAAQ1B,EAAAA,EAAAA,IAAAgK,EAAAA,EAAA,kCAGLhL,EAAM0C,UAAQ,WAErBrB,GAAS,GAEhB,KAMF6K,EAAAA,EAAAA,GAAY,CACjB9G,YACA3C,OACA0F,UACCpE,EACL,G,8ECtiBK,SAASwC,EAAcH,EAAiC+F,GAC7D,MAAMC,GAAc/G,EAAAA,EAAAA,KAAW,GAC/B,IAAIgH,EACJ,SAAShG,EAAcI,GACrB6F,qBAAqBD,GACrBD,EAAYlM,OAAQ,EACpBmM,EAAgBpE,uBAAsB,KACpCoE,EAAgBpE,uBAAsB,KACpCmE,EAAYlM,OAAQ,CAAK,GACzB,GAEN,CACAqM,eAAeC,UACP,IAAIC,SAAQC,GAAWzE,sBAAsByE,WAC7C,IAAID,SAAQC,GAAWzE,sBAAsByE,WAC7C,IAAID,SAAQC,GAAWzE,sBAAsByE,WAC7C,IAAID,SAAcC,IACtB,GAAIN,EAAYlM,MAAO,CACrB,MAAMyM,GAAOzD,EAAAA,EAAAA,IAAMkD,GAAa,KAC9BO,IACAD,GAAS,GAEb,MAAOA,GAAS,GAEpB,CACAH,eAAejG,EAAeG,GAK5B,GAJc,QAAVA,EAAEG,KACJuF,EAAajM,OAAO6G,SAGjB,CAAC,WAAY,SAAU,OAAQ,OAAOF,SAASJ,EAAEG,KAAM,OAC5D,MAAMgG,EAAkBxG,EAAQlG,OAAOyI,IACvC,IAAKiE,EAAI,OAEK,SAAVnG,EAAEG,KAA4B,QAAVH,EAAEG,KACxBgG,EAAGC,SAAS,CACVC,IAAe,SAAVrG,EAAEG,IAAiB,EAAIgG,EAAGG,aAC/BC,SAAU,iBAIRR,IAEN,MAAMS,EAAWL,EAAGM,iBAAiB,4CAErC,GAAc,aAAVzG,EAAEG,KAAgC,SAAVH,EAAEG,IAAgB,CAC5C,MAAMkG,EAAMF,EAAGO,wBAAwBL,IACvC,IAAK,MAAMM,KAASH,EAClB,GAAIG,EAAMD,wBAAwBL,KAAOA,EAAK,CAC3CM,EAAsBrG,QACvB,KACF,CAEJ,KAAO,CACL,MAAMsG,EAAST,EAAGO,wBAAwBE,OAC1C,IAAK,MAAMD,IAAS,IAAIH,GAAUK,UAChC,GAAIF,EAAMD,wBAAwBE,QAAUA,EAAQ,CACjDD,EAAsBrG,QACvB,KACF,CAEJ,CACF,CAEA,MAAO,CAAEV,eAAcC,gBACzB,C,4LCzCO,MAAMiH,GAA0BpO,EAAAA,EAAAA,GAAa,CAClDoF,MAAO,CACLhF,KAAMyM,MACNvM,QAASA,IAAO,IAElB+N,WAAYnO,YAEToO,EAAAA,EAAAA,SACAjM,EAAAA,EAAAA,SACAkM,EAAAA,EAAAA,MACF,kBAEUtD,GAAiBtK,EAAAA,EAAAA,KAAAA,CAUmB,CAC/CC,KAAM,iBAENC,MAAOuN,IAEPpN,KAAAA,CAAOH,EAAKI,GAAa,IAAX,MAAEC,GAAOD,EACrB,MAAMuN,GAAKC,EAAAA,EAAAA,IAAmB,mBACxB,gBAAEC,IAAoBC,EAAAA,EAAAA,GAAa9N,IACnC,aACJ+N,EAAY,UACZC,EAAS,aACTC,EAAY,gBACZC,EAAe,iBACfC,EAAgB,cAChBjG,EAAa,WACbkG,EAAU,cACVC,EAAa,cACbC,IACEC,EAAAA,EAAAA,GAAWvO,GAAOwO,EAAAA,EAAAA,IAAMxO,EAAO,UAmEnC,OAjEAyO,EAAAA,EAAAA,IAAe,IAAMzO,EAAMwN,aAAY,KACrC,SAASkB,IAA8B,IAAbnG,EAAGH,UAAAtD,OAAA,QAAAzD,IAAA+G,UAAA,IAAAA,UAAA,GAC3B,MAAMuG,EAASpG,EAAM,mBAAqB,sBAEtCwF,EAAa7N,QAAU0O,SAASC,iBAClCD,SAASD,GAAQ,SAAUV,EAAc,CAAEa,SAAS,IACpDF,SAASD,GAAQ,YAAaT,KAE9BH,EAAa7N,QAAQyO,GAAQ,SAAUV,EAAc,CAAEa,SAAS,IAChEf,EAAa7N,QAAQyO,GAAQ,YAAaT,GAE9C,EAEAa,EAAAA,EAAAA,KAAU,KACRhB,EAAa7N,OAAQ8O,EAAAA,EAAAA,IAAgBrB,EAAGsB,MAAMrC,IAAmB,GACjE8B,GAAgB,EAAK,KAEvBQ,EAAAA,EAAAA,IAAeR,EAAgB,KAGjC/N,EAAAA,EAAAA,IAAU,KACR,MAAMsM,EAAWqB,EAAcpO,MAAMgF,KAAIS,IAAI3E,EAAAA,EAAAA,IAAAmO,EAAAA,EAAA,KAEnCxJ,EAAKkC,MAAK,WACH7H,EAAMwN,WAAU,kBACX4B,GAAUjB,EAAiBxI,EAAKkC,MAAOuH,IAAO,CAAA3P,QAE9D0L,GAAa9K,EAAMZ,UAAU,CAAEkG,KAAMA,EAAK0J,IAAKxH,MAAOlC,EAAKkC,SAAUsD,QAI3E,OAAOnL,EAAMwN,YAAUxM,EAAAA,EAAAA,IAAA+I,EAAAA,GAAA,OAAA/I,EAAAA,EAAAA,IAAA,WAERgN,EAAS,uCAA2C,CAAEI,YAAYkB,EAAAA,EAAAA,IAAclB,EAAWlO,SAAQ,MAC5G+M,GAAQjM,EAAAA,EAAAA,IAAA,8CACmC,CAAEqN,eAAeiB,EAAAA,EAAAA,IAAcjB,EAAcnO,SAAQ,SAAAc,EAAAA,EAAAA,IAAA,WAI5F+M,EAAY,MACX,CACL,mBACA/N,EAAMmB,OACP,gBACiB8M,EAAY,YAChBC,EAAe,MACtB,CACLL,EAAgB3N,MAChBF,EAAMoB,QACP,EAAAJ,EAAAA,EAAAA,IAAA,WAGOgN,EAAS,0CAER,CACLI,YAAYkB,EAAAA,EAAAA,IAAclB,EAAWlO,OACrCmO,eAAeiB,EAAAA,EAAAA,IAAcjB,EAAcnO,SAC5C,CAEC+M,KAGP,IAGI,CACL/E,gBAEJ,G,uHCnIK,MAAMqH,GAA8BpQ,EAAAA,EAAAA,GAAa,CACtDqO,WAAYnO,YAETmC,EAAAA,EAAAA,MACF,sBAEU2N,GAAqBrP,EAAAA,EAAAA,KAAAA,CASe,CAC/CC,KAAM,qBAENyP,cAAc,EAEdxP,MAAOuP,IAEPtP,MAAO,CACL,gBAAkBmP,IAAmB,GAGvCjP,KAAAA,CAAOH,EAAKI,GAA0B,IAAxB,MAAEqP,EAAK,KAAEC,EAAI,MAAErP,GAAOD,EAClC,MAAM,UAAEuP,EAAS,YAAEC,IAAgBC,EAAAA,EAAAA,QAAkBxO,EAAW,WAEhE6H,EAAAA,EAAAA,KAAM,IAAM0G,EAAY1P,OAAOkP,SAAQA,IACvB,MAAVA,GAAgBM,EAAK,gBAAiBN,EAAO,KAGnDzO,EAAAA,EAAAA,IAAU,IAAMX,EAAMwN,YAAUxM,EAAAA,EAAAA,IAAA+I,EAAAA,GAAA,MAE1B1J,EAAMZ,UAAU,CAAE6K,QAASqF,OAAY3O,EAAAA,EAAAA,IAAA,OAAAC,EAAAA,EAAAA,IAAA,KAInC0O,EAAS,MACR,CACL,yBACA3P,EAAMmB,OACP,MACOnB,EAAMoB,OACTqO,GAAK,CAEPpP,EAAMZ,eAGf,G,uJClDF,MAAMqQ,GAAM,EACNC,EAAO,EAGPC,EAAY,IAOLvC,GAAmBtO,EAAAA,EAAAA,GAAa,CAC3C8Q,WAAY,CACV1Q,KAAM,CAAC2Q,OAAQhO,QACfzC,QAAS,MAEX2P,OAAQ,CAACc,OAAQhO,SAChB,WAEI,SAASqM,EAAgBvO,EAAqBuE,GACnD,MAAM4L,GAAUC,EAAAA,EAAAA,MAEVH,GAAa5K,EAAAA,EAAAA,IAAW,IAC9BgL,EAAAA,EAAAA,KAAY,KACVJ,EAAW/P,MAAQoQ,WAAWtQ,EAAMiQ,YAAc,EAAE,IAGtD,MAAMM,GAAQlL,EAAAA,EAAAA,IAAW,GACnBmL,GAAOnL,EAAAA,EAAAA,IAAWoL,KAAKC,MAK1BC,SAAS3Q,EAAMoP,SAAYe,EAAQf,OAAOlP,QAAU+P,EAAW/P,OAAS,MACtE,GACCkO,GAAa/I,EAAAA,EAAAA,IAAW,GACxBgJ,GAAgBhJ,EAAAA,EAAAA,IAAW,GAG3B0I,GAAe/J,EAAAA,EAAAA,MAGfgK,GAAYhK,EAAAA,EAAAA,MAElB,IAAI4M,EAAe,EAEnB,MAAM,UAAEjB,EAAS,YAAEC,IAAgBC,EAAAA,EAAAA,MACnCQ,EAAAA,EAAAA,KAAY,KACVV,EAAUzP,MAAQ6N,EAAa7N,KAAK,IAEtC,MAAM2Q,GAAiBnQ,EAAAA,EAAAA,KAAS,IACvBqN,EAAa7N,QAAU0O,SAASC,gBACnCsB,EAAQf,OAAOlP,MACf0P,EAAY1P,OAAOkP,QAAUuB,SAAS3Q,EAAMoP,SAAY,IAGxD0B,GAAmBpQ,EAAAA,EAAAA,KAAS,OACtBqN,EAAa7N,OAAS8N,EAAU9N,OAAS2Q,EAAe3Q,OAAS+P,EAAW/P,SAGxF,IAAI6Q,EAAQ/E,MAAMgF,KAAoB,CAAElM,OAAQP,EAAMrE,MAAM4E,SACxDmM,EAAUjF,MAAMgF,KAAa,CAAElM,OAAQP,EAAMrE,MAAM4E,SACvD,MAAMoM,GAAa7L,EAAAA,EAAAA,IAAW,GAC9B,IAAI8L,GAAqB,EAEzB,SAASC,EAASvJ,GAChB,OAAOkJ,EAAMlJ,IAAUoI,EAAW/P,KACpC,CAEA,MAAMmR,GAAgBC,EAAAA,EAAAA,KAAS,KAC7B,MAAMC,EAAQ/J,YAAYD,MAC1B0J,EAAQ,GAAK,EACb,MAAMnM,EAASP,EAAMrE,MAAM4E,OAC3B,IAAK,IAAI0M,EAAI,EAAGA,GAAK1M,EAAS,EAAG0M,IAC/BP,EAAQO,IAAMP,EAAQO,EAAI,IAAM,GAAKJ,EAAQI,EAAI,GAEnDN,EAAWhR,MAAQuQ,KAAKgB,IAAIP,EAAWhR,MAAOsH,YAAYD,MAAQgK,EAAM,GACvEL,GAEGQ,GAAUxI,EAAAA,EAAAA,IAAM4H,GAAkBrQ,IACjCA,IAILiR,IACAd,EAAe5C,EAAU9N,MAAOyR,UAChCN,EAAcO,YACdC,KAEMV,IAEN1I,EAAAA,EAAAA,KAAS,KACPV,EAAAA,IAAcC,OAAOC,uBAAsB,KACzCC,EAAciJ,GACdA,GAAqB,CAAC,GACtB,IACF,IAOJ,SAAShD,EAAkBtG,EAAeuH,GACxC,MAAM0C,EAAaf,EAAMlJ,GACnBkK,EAAgB9B,EAAW/P,MAEjC+P,EAAW/P,MAAQ6R,EAAgBtB,KAAKuB,IAAI/B,EAAW/P,MAAOkP,GAAUA,EAEpE0C,IAAe1C,GAAU2C,IAAkB9B,EAAW/P,QACxD6Q,EAAMlJ,GAASuH,EACfiC,IAEJ,CAEA,SAASY,EAAiBpK,GAExB,OADAA,GAAQqK,EAAAA,EAAAA,IAAMrK,EAAO,EAAGtD,EAAMrE,MAAM4E,OAAS,GACtCmM,EAAQpJ,IAAU,CAC3B,CAEA,SAASsK,EAAgBC,GACvB,OAAOC,EAAcpB,EAASmB,EAChC,EAvBAlD,EAAAA,EAAAA,KAAe,KACbmC,EAAciB,OAAO,IAwBvB,IAAIC,EAAgB,EAChBC,EAAiB,EACjBC,EAAiB,EAcrB,SAASxE,IACP,IAAKF,EAAa7N,QAAU8N,EAAU9N,MAAO,OAE7C,MAAMkS,EAAYrE,EAAa7N,MAAMkS,UAC/BM,EAAalL,YAAYD,MACzBoL,EAAeD,EAAaD,EAE9BE,EAAe,KACjBH,EAAiB/B,KAAKmC,KAAKR,EAAYG,GAIvC3B,EAAe5C,EAAU9N,MAAMyR,WAE/Ba,EAAiBJ,EAAYG,EAG/BA,EAAgBH,EAChBK,EAAiBC,EAEjBb,GACF,CACA,SAAS3D,IACFH,EAAa7N,OAAU8N,EAAU9N,QAEtCsS,EAAiB,EACjBC,EAAiB,EAEjBZ,IACF,EAzCA3I,EAAAA,EAAAA,IAAM2H,GAAgB,CAACgC,EAAKzJ,KACtBA,IACFyI,IACIgB,EAAMzJ,GACRnB,uBAAsB,KACpBuK,EAAiB,EACjBX,GAAuB,IAG7B,IAkCF,IAAIiB,GAAO,EACX,SAASjB,IACPvF,qBAAqBwG,GACrBA,EAAM7K,sBAAsB8K,EAC9B,CACA,SAASA,IACP,IAAKhF,EAAa7N,QAAU2Q,EAAe3Q,MAAO,OAClD,MAAMkS,EAAYG,EAAgB3B,EAC5BoC,EAAYvC,KAAKmC,KAAKJ,GAEtBS,EAAUxC,KAAKgB,IAAI,EAAGW,EAAYpC,GAClCuB,GAAQW,EAAAA,EAAAA,IAAMC,EAAec,GAAU,EAAG1O,EAAMrE,MAAM4E,QAEtDoO,EAAQd,EAAYvB,EAAe3Q,MAAQ8P,EAC3CmD,GAAMjB,EAAAA,EAAAA,IAAMC,EAAee,GAAS,EAAG3B,EAAQ,EAAGhN,EAAMrE,MAAM4E,QAEpE,IAGGkO,IAAclD,GAAMyB,EAAQhB,EAAMrQ,SAClC8S,IAAcjD,GAAQoD,EAAM3C,EAAKtQ,OAClC,CACA,MAAMkT,EAAcnB,EAAgB1B,EAAMrQ,OAAS+R,EAAgBV,GAC7D8B,EAAiBpB,EAAgBkB,GAAOlB,EAAgBzB,EAAKtQ,OAC7DoT,EAAiB7C,KAAKgB,IAAI2B,EAAaC,GAEzCC,EAAiBtD,GACnBO,EAAMrQ,MAAQqR,EACdf,EAAKtQ,MAAQiT,IAGT5B,GAAS,IAAGhB,EAAMrQ,MAAQqR,GAC1B4B,GAAO5O,EAAMrE,MAAM4E,SAAQ0L,EAAKtQ,MAAQiT,GAEhD,CAEA/E,EAAWlO,MAAQ+R,EAAgB1B,EAAMrQ,OACzCmO,EAAcnO,MAAQ+R,EAAgB1N,EAAMrE,MAAM4E,QAAUmN,EAAgBzB,EAAKtQ,MACnF,CAEA,SAASgI,EAAeL,GACtB,MAAM0L,EAAStB,EAAgBpK,IAC1BkG,EAAa7N,OAAU2H,IAAU0L,EACpCpC,EAAoBtJ,EAEpBkG,EAAa7N,MAAMkS,UAAYmB,CAEnC,CAEA,MAAMjF,GAAgB5N,EAAAA,EAAAA,KAAS,IACtB6D,EAAMrE,MAAMsT,MAAMjD,EAAMrQ,MAAOsQ,EAAKtQ,OAAOgF,KAAI,CAACS,EAAMkC,KAAU,CACrEwH,IAAK1J,EACLkC,MAAOA,EAAQ0I,EAAMrQ,YAWzB,OAPAgJ,EAAAA,EAAAA,IAAM3E,GAAO,KACXwM,EAAQ/E,MAAMgF,KAAK,CAAElM,OAAQP,EAAMrE,MAAM4E,SACzCmM,EAAUjF,MAAMgF,KAAK,CAAElM,OAAQP,EAAMrE,MAAM4E,SAC3CuM,EAAcO,YACdC,GAAuB,GACtB,CAAE4B,MAAM,IAEJ,CACL1F,eACAC,YACAM,gBACAF,aACAC,gBACAnG,gBACA+F,eACAC,kBACAC,mBAEJ,CAGA,SAASkE,EAAeqB,EAAwBb,GAC9C,IAAIc,EAAOD,EAAI5O,OAAS,EACpB8O,EAAM,EACNC,EAAM,EACNlO,EAAO,KACPmO,GAAU,EAEd,GAAIJ,EAAIC,GAASd,EACf,OAAOc,EAGT,MAAOC,GAAOD,EAIZ,GAHAE,EAAOD,EAAMD,GAAS,EACtBhO,EAAO+N,EAAIG,GAEPlO,EAAOkN,EACTc,EAAOE,EAAM,MACR,MAAIlO,EAAOkN,GAGX,OAAIlN,IAASkN,EACXgB,EAEAD,EALPE,EAASD,EACTD,EAAMC,EAAM,CAKd,CAGF,OAAOC,CACT,C","sources":["webpack://fitoagro_backoffice/../../../src/components/VCheckbox/VCheckboxBtn.tsx","webpack://fitoagro_backoffice/../../../src/components/VGrid/VContainer.tsx","webpack://fitoagro_backoffice/../../../src/components/VSelect/VSelect.tsx","webpack://fitoagro_backoffice/../../../src/components/VSelect/useScrolling.ts","webpack://fitoagro_backoffice/../../../src/components/VVirtualScroll/VVirtualScroll.tsx","webpack://fitoagro_backoffice/../../../src/components/VVirtualScroll/VVirtualScrollItem.tsx","webpack://fitoagro_backoffice/../../src/composables/virtual.ts"],"sourcesContent":["// Components\nimport { makeVSelectionControlProps, VSelectionControl } from '@/components/VSelectionControl/VSelectionControl'\n\n// Composables\nimport { IconValue } from '@/composables/icons'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed } from 'vue'\nimport { genericComponent, omit, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { VSelectionControlSlots } from '@/components/VSelectionControl/VSelectionControl'\nimport type { GenericProps } from '@/util'\n\nexport const makeVCheckboxBtnProps = propsFactory({\n  indeterminate: Boolean,\n  indeterminateIcon: {\n    type: IconValue,\n    default: '$checkboxIndeterminate',\n  },\n\n  ...makeVSelectionControlProps({\n    falseIcon: '$checkboxOff',\n    trueIcon: '$checkboxOn',\n  }),\n}, 'VCheckboxBtn')\n\nexport const VCheckboxBtn = genericComponent<new <T>(\n  props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (value: T) => void\n  },\n  slots: VSelectionControlSlots,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VCheckboxBtn',\n\n  props: makeVCheckboxBtnProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n    'update:indeterminate': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const indeterminate = useProxiedModel(props, 'indeterminate')\n    const model = useProxiedModel(props, 'modelValue')\n\n    function onChange (v: any) {\n      if (indeterminate.value) {\n        indeterminate.value = false\n      }\n    }\n\n    const falseIcon = computed(() => {\n      return indeterminate.value\n        ? props.indeterminateIcon\n        : props.falseIcon\n    })\n\n    const trueIcon = computed(() => {\n      return indeterminate.value\n        ? props.indeterminateIcon\n        : props.trueIcon\n    })\n\n    useRender(() => {\n      const controlProps = omit(VSelectionControl.filterProps(props), ['modelValue'])\n      return (\n        <VSelectionControl\n          { ...controlProps }\n          v-model={ model.value }\n          class={[\n            'v-checkbox-btn',\n            props.class,\n          ]}\n          style={ props.style }\n          type=\"checkbox\"\n          onUpdate:modelValue={ onChange }\n          falseIcon={ falseIcon.value }\n          trueIcon={ trueIcon.value }\n          aria-checked={ indeterminate.value ? 'mixed' : undefined }\n          v-slots={ slots }\n        />\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VCheckboxBtn = InstanceType<typeof VCheckboxBtn>\n","// Styles\nimport './VGrid.sass'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { useRtl } from '@/composables/locale'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVContainerProps = propsFactory({\n  fluid: {\n    type: Boolean,\n    default: false,\n  },\n\n  ...makeComponentProps(),\n  ...makeTagProps(),\n}, 'VContainer')\n\nexport const VContainer = genericComponent()({\n  name: 'VContainer',\n\n  props: makeVContainerProps(),\n\n  setup (props, { slots }) {\n    const { rtlClasses } = useRtl()\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-container',\n          { 'v-container--fluid': props.fluid },\n          rtlClasses.value,\n          props.class,\n        ]}\n        style={ props.style }\n        v-slots={ slots }\n      />\n    ))\n\n    return {}\n  },\n})\n\nexport type VContainer = InstanceType<typeof VContainer>\n","// Styles\nimport './VSelect.sass'\n\n// Components\nimport { VDialogTransition } from '@/components/transitions'\nimport { VAvatar } from '@/components/VAvatar'\nimport { VCheckboxBtn } from '@/components/VCheckbox'\nimport { VChip } from '@/components/VChip'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\nimport { VList, VListItem } from '@/components/VList'\nimport { VMenu } from '@/components/VMenu'\nimport { makeVTextFieldProps, VTextField } from '@/components/VTextField/VTextField'\nimport { VVirtualScroll } from '@/components/VVirtualScroll'\n\n// Composables\nimport { useScrolling } from './useScrolling'\nimport { useForm } from '@/composables/form'\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { IconValue } from '@/composables/icons'\nimport { makeItemsProps, useItems } from '@/composables/list-items'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeTransitionProps } from '@/composables/transition'\n\n// Utilities\nimport { computed, mergeProps, nextTick, ref, shallowRef, watch } from 'vue'\nimport {\n  ensureValidVNode,\n  genericComponent,\n  IN_BROWSER,\n  matchesSelector,\n  omit,\n  propsFactory,\n  useRender,\n  wrapInArray,\n} from '@/util'\n\n// Types\nimport type { Component, PropType } from 'vue'\nimport type { VFieldSlots } from '@/components/VField/VField'\nimport type { VInputSlots } from '@/components/VInput/VInput'\nimport type { ListItem } from '@/composables/list-items'\nimport type { GenericProps, SelectItemKey } from '@/util'\n\ntype Primitive = string | number | boolean | symbol\n\ntype Val <T, ReturnObject extends boolean> = [T] extends [Primitive]\n  ? T\n  : (ReturnObject extends true ? T : any)\n\ntype Value <T, ReturnObject extends boolean, Multiple extends boolean> =\n  Multiple extends true\n    ? readonly Val<T, ReturnObject>[]\n    : Val<T, ReturnObject> | null\n\nexport const makeSelectProps = propsFactory({\n  chips: Boolean,\n  closableChips: Boolean,\n  closeText: {\n    type: String,\n    default: '$vuetify.close',\n  },\n  openText: {\n    type: String,\n    default: '$vuetify.open',\n  },\n  eager: Boolean,\n  hideNoData: Boolean,\n  hideSelected: Boolean,\n  listProps: {\n    type: Object as PropType<VList['$props']>,\n  },\n  menu: Boolean,\n  menuIcon: {\n    type: IconValue,\n    default: '$dropdown',\n  },\n  menuProps: {\n    type: Object as PropType<VMenu['$props']>,\n  },\n  multiple: Boolean,\n  noDataText: {\n    type: String,\n    default: '$vuetify.noDataText',\n  },\n  openOnClear: Boolean,\n  itemColor: String,\n\n  ...makeItemsProps({ itemChildren: false }),\n}, 'Select')\n\nexport const makeVSelectProps = propsFactory({\n  ...makeSelectProps(),\n  ...omit(makeVTextFieldProps({\n    modelValue: null,\n    role: 'combobox',\n  }), ['validationValue', 'dirty', 'appendInnerIcon']),\n  ...makeTransitionProps({ transition: { component: VDialogTransition as Component } }),\n}, 'VSelect')\n\ntype ItemType<T> = T extends readonly (infer U)[] ? U : never\n\nexport const VSelect = genericComponent<new <\n  T extends readonly any[],\n  Item = ItemType<T>,\n  ReturnObject extends boolean = false,\n  Multiple extends boolean = false,\n  V extends Value<Item, ReturnObject, Multiple> = Value<Item, ReturnObject, Multiple>\n>(\n  props: {\n    items?: T\n    itemTitle?: SelectItemKey<ItemType<T>>\n    itemValue?: SelectItemKey<ItemType<T>>\n    itemProps?: SelectItemKey<ItemType<T>>\n    returnObject?: ReturnObject\n    multiple?: Multiple\n    modelValue?: V | null\n    'onUpdate:modelValue'?: (value: V) => void\n  },\n  slots: Omit<VInputSlots & VFieldSlots, 'default'> & {\n    item: { item: ListItem<Item>, index: number, props: Record<string, unknown> }\n    chip: { item: ListItem<Item>, index: number, props: Record<string, unknown> }\n    selection: { item: ListItem<Item>, index: number }\n    'prepend-item': never\n    'append-item': never\n    'no-data': never\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VSelect',\n\n  props: makeVSelectProps(),\n\n  emits: {\n    'update:focused': (focused: boolean) => true,\n    'update:modelValue': (value: any) => true,\n    'update:menu': (ue: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const { t } = useLocale()\n    const vTextFieldRef = ref()\n    const vMenuRef = ref<VMenu>()\n    const vVirtualScrollRef = ref<VVirtualScroll>()\n    const _menu = useProxiedModel(props, 'menu')\n    const menu = computed({\n      get: () => _menu.value,\n      set: v => {\n        if (_menu.value && !v && vMenuRef.value?.ΨopenChildren) return\n        _menu.value = v\n      },\n    })\n    const { items, transformIn, transformOut } = useItems(props)\n    const model = useProxiedModel(\n      props,\n      'modelValue',\n      [],\n      v => transformIn(v === null ? [null] : wrapInArray(v)),\n      v => {\n        const transformed = transformOut(v)\n        return props.multiple ? transformed : (transformed[0] ?? null)\n      }\n    )\n    const counterValue = computed(() => {\n      return typeof props.counterValue === 'function' ? props.counterValue(model.value)\n        : typeof props.counterValue === 'number' ? props.counterValue\n        : model.value.length\n    })\n    const form = useForm()\n    const selectedValues = computed(() => model.value.map(selection => selection.value))\n    const isFocused = shallowRef(false)\n    const label = computed(() => menu.value ? props.closeText : props.openText)\n\n    let keyboardLookupPrefix = ''\n    let keyboardLookupLastTime: number\n\n    const displayItems = computed(() => {\n      if (props.hideSelected) {\n        return items.value.filter(item => !model.value.some(s => props.valueComparator(s, item)))\n      }\n      return items.value\n    })\n\n    const menuDisabled = computed(() => (\n      (props.hideNoData && !displayItems.value.length) ||\n      props.readonly || form?.isReadonly.value\n    ))\n\n    const computedMenuProps = computed(() => {\n      return {\n        ...props.menuProps,\n        activatorProps: {\n          ...(props.menuProps?.activatorProps || {}),\n          'aria-haspopup': 'listbox', // Set aria-haspopup to 'listbox'\n        },\n      }\n    })\n\n    const listRef = ref<VList>()\n    const { onListScroll, onListKeydown } = useScrolling(listRef, vTextFieldRef)\n    function onClear (e: MouseEvent) {\n      if (props.openOnClear) {\n        menu.value = true\n      }\n    }\n    function onMousedownControl () {\n      if (menuDisabled.value) return\n\n      menu.value = !menu.value\n    }\n    function onKeydown (e: KeyboardEvent) {\n      if (!e.key || props.readonly || form?.isReadonly.value) return\n\n      if (['Enter', ' ', 'ArrowDown', 'ArrowUp', 'Home', 'End'].includes(e.key)) {\n        e.preventDefault()\n      }\n\n      if (['Enter', 'ArrowDown', ' '].includes(e.key)) {\n        menu.value = true\n      }\n\n      if (['Escape', 'Tab'].includes(e.key)) {\n        menu.value = false\n      }\n\n      if (e.key === 'Home') {\n        listRef.value?.focus('first')\n      } else if (e.key === 'End') {\n        listRef.value?.focus('last')\n      }\n\n      // html select hotkeys\n      const KEYBOARD_LOOKUP_THRESHOLD = 1000 // milliseconds\n\n      function checkPrintable (e: KeyboardEvent) {\n        const isPrintableChar = e.key.length === 1\n        const noModifier = !e.ctrlKey && !e.metaKey && !e.altKey\n        return isPrintableChar && noModifier\n      }\n\n      if (props.multiple || !checkPrintable(e)) return\n\n      const now = performance.now()\n      if (now - keyboardLookupLastTime > KEYBOARD_LOOKUP_THRESHOLD) {\n        keyboardLookupPrefix = ''\n      }\n      keyboardLookupPrefix += e.key.toLowerCase()\n      keyboardLookupLastTime = now\n\n      const item = items.value.find(item => item.title.toLowerCase().startsWith(keyboardLookupPrefix))\n      if (item !== undefined) {\n        model.value = [item]\n        const index = displayItems.value.indexOf(item)\n        IN_BROWSER && window.requestAnimationFrame(() => {\n          index >= 0 && vVirtualScrollRef.value?.scrollToIndex(index)\n        })\n      }\n    }\n\n    /** @param set - null means toggle */\n    function select (item: ListItem, set: boolean | null = true) {\n      if (item.props.disabled) return\n\n      if (props.multiple) {\n        const index = model.value.findIndex(selection => props.valueComparator(selection.value, item.value))\n        const add = set == null ? !~index : set\n\n        if (~index) {\n          const value = add ? [...model.value, item] : [...model.value]\n          value.splice(index, 1)\n          model.value = value\n        } else if (add) {\n          model.value = [...model.value, item]\n        }\n      } else {\n        const add = set !== false\n        model.value = add ? [item] : []\n\n        nextTick(() => {\n          menu.value = false\n        })\n      }\n    }\n    function onBlur (e: FocusEvent) {\n      if (!listRef.value?.$el.contains(e.relatedTarget as HTMLElement)) {\n        menu.value = false\n      }\n    }\n    function onAfterLeave () {\n      if (isFocused.value) {\n        vTextFieldRef.value?.focus()\n      }\n    }\n    function onFocusin (e: FocusEvent) {\n      isFocused.value = true\n    }\n    function onModelUpdate (v: any) {\n      if (v == null) model.value = []\n      else if (matchesSelector(vTextFieldRef.value, ':autofill') || matchesSelector(vTextFieldRef.value, ':-webkit-autofill')) {\n        const item = items.value.find(item => item.title === v)\n        if (item) {\n          select(item)\n        }\n      } else if (vTextFieldRef.value) {\n        vTextFieldRef.value.value = ''\n      }\n    }\n\n    watch(menu, () => {\n      if (!props.hideSelected && menu.value && model.value.length) {\n        const index = displayItems.value.findIndex(\n          item => model.value.some(s => props.valueComparator(s.value, item.value))\n        )\n        IN_BROWSER && window.requestAnimationFrame(() => {\n          index >= 0 && vVirtualScrollRef.value?.scrollToIndex(index)\n        })\n      }\n    })\n\n    watch(() => props.items, (newVal, oldVal) => {\n      if (menu.value) return\n\n      if (isFocused.value && !oldVal.length && newVal.length) {\n        menu.value = true\n      }\n    })\n\n    useRender(() => {\n      const hasChips = !!(props.chips || slots.chip)\n      const hasList = !!(\n        (!props.hideNoData || displayItems.value.length) ||\n        slots['prepend-item'] ||\n        slots['append-item'] ||\n        slots['no-data']\n      )\n      const isDirty = model.value.length > 0\n      const textFieldProps = VTextField.filterProps(props)\n\n      const placeholder = isDirty || (\n        !isFocused.value &&\n        props.label &&\n        !props.persistentPlaceholder\n      ) ? undefined : props.placeholder\n\n      return (\n        <VTextField\n          ref={ vTextFieldRef }\n          { ...textFieldProps }\n          modelValue={ model.value.map(v => v.props.value).join(', ') }\n          onUpdate:modelValue={ onModelUpdate }\n          v-model:focused={ isFocused.value }\n          validationValue={ model.externalValue }\n          counterValue={ counterValue.value }\n          dirty={ isDirty }\n          class={[\n            'v-select',\n            {\n              'v-select--active-menu': menu.value,\n              'v-select--chips': !!props.chips,\n              [`v-select--${props.multiple ? 'multiple' : 'single'}`]: true,\n              'v-select--selected': model.value.length,\n              'v-select--selection-slot': !!slots.selection,\n            },\n            props.class,\n          ]}\n          style={ props.style }\n          inputmode=\"none\"\n          placeholder={ placeholder }\n          onClick:clear={ onClear }\n          onMousedown:control={ onMousedownControl }\n          onBlur={ onBlur }\n          onKeydown={ onKeydown }\n          aria-label={ t(label.value) }\n          title={ t(label.value) }\n        >\n          {{\n            ...slots,\n            default: () => (\n              <>\n                <VMenu\n                  ref={ vMenuRef }\n                  v-model={ menu.value }\n                  activator=\"parent\"\n                  contentClass=\"v-select__content\"\n                  disabled={ menuDisabled.value }\n                  eager={ props.eager }\n                  maxHeight={ 310 }\n                  openOnClick={ false }\n                  closeOnContentClick={ false }\n                  transition={ props.transition }\n                  onAfterLeave={ onAfterLeave }\n                  { ...computedMenuProps.value }\n                >\n                  { hasList && (\n                    <VList\n                      ref={ listRef }\n                      selected={ selectedValues.value }\n                      selectStrategy={ props.multiple ? 'independent' : 'single-independent' }\n                      onMousedown={ (e: MouseEvent) => e.preventDefault() }\n                      onKeydown={ onListKeydown }\n                      onFocusin={ onFocusin }\n                      onScrollPassive={ onListScroll }\n                      tabindex=\"-1\"\n                      aria-live=\"polite\"\n                      color={ props.itemColor ?? props.color }\n                      { ...props.listProps }\n                    >\n                      { slots['prepend-item']?.() }\n\n                      { !displayItems.value.length && !props.hideNoData && (slots['no-data']?.() ?? (\n                        <VListItem title={ t(props.noDataText) } />\n                      ))}\n\n                      <VVirtualScroll ref={ vVirtualScrollRef } renderless items={ displayItems.value }>\n                        { ({ item, index, itemRef }) => {\n                          const itemProps = mergeProps(item.props, {\n                            ref: itemRef,\n                            key: index,\n                            onClick: () => select(item, null),\n                          })\n\n                          return slots.item?.({\n                            item,\n                            index,\n                            props: itemProps,\n                          }) ?? (\n                            <VListItem { ...itemProps } role=\"option\">\n                              {{\n                                prepend: ({ isSelected }) => (\n                                  <>\n                                    { props.multiple && !props.hideSelected ? (\n                                      <VCheckboxBtn\n                                        key={ item.value }\n                                        modelValue={ isSelected }\n                                        ripple={ false }\n                                        tabindex=\"-1\"\n                                      />\n                                    ) : undefined }\n\n                                    { item.props.prependAvatar && (\n                                      <VAvatar image={ item.props.prependAvatar } />\n                                    )}\n\n                                    { item.props.prependIcon && (\n                                      <VIcon icon={ item.props.prependIcon } />\n                                    )}\n                                  </>\n                                ),\n                              }}\n                            </VListItem>\n                          )\n                        }}\n                      </VVirtualScroll>\n\n                      { slots['append-item']?.() }\n                    </VList>\n                  )}\n                </VMenu>\n\n                { model.value.map((item, index) => {\n                  function onChipClose (e: Event) {\n                    e.stopPropagation()\n                    e.preventDefault()\n\n                    select(item, false)\n                  }\n\n                  const slotProps = {\n                    'onClick:close': onChipClose,\n                    onKeydown (e: KeyboardEvent) {\n                      if (e.key !== 'Enter' && e.key !== ' ') return\n\n                      e.preventDefault()\n                      e.stopPropagation()\n\n                      onChipClose(e)\n                    },\n                    onMousedown (e: MouseEvent) {\n                      e.preventDefault()\n                      e.stopPropagation()\n                    },\n                    modelValue: true,\n                    'onUpdate:modelValue': undefined,\n                  }\n\n                  const hasSlot = hasChips ? !!slots.chip : !!slots.selection\n                  const slotContent = hasSlot\n                    ? ensureValidVNode(\n                      hasChips\n                        ? slots.chip!({ item, index, props: slotProps })\n                        : slots.selection!({ item, index })\n                    )\n                    : undefined\n\n                  if (hasSlot && !slotContent) return undefined\n\n                  return (\n                    <div key={ item.value } class=\"v-select__selection\">\n                      { hasChips ? (\n                        !slots.chip ? (\n                          <VChip\n                            key=\"chip\"\n                            closable={ props.closableChips }\n                            size=\"small\"\n                            text={ item.title }\n                            disabled={ item.props.disabled }\n                            { ...slotProps }\n                          />\n                        ) : (\n                          <VDefaultsProvider\n                            key=\"chip-defaults\"\n                            defaults={{\n                              VChip: {\n                                closable: props.closableChips,\n                                size: 'small',\n                                text: item.title,\n                              },\n                            }}\n                          >\n                            { slotContent }\n                          </VDefaultsProvider>\n                        )\n                      ) : (\n                        slotContent ?? (\n                          <span class=\"v-select__selection-text\">\n                            { item.title }\n                            { props.multiple && (index < model.value.length - 1) && (\n                              <span class=\"v-select__selection-comma\">,</span>\n                            )}\n                          </span>\n                        )\n                      )}\n                    </div>\n                  )\n                })}\n              </>\n            ),\n            'append-inner': (...args) => (\n              <>\n                { slots['append-inner']?.(...args) }\n                { props.menuIcon ? (\n                  <VIcon\n                    class=\"v-select__menu-icon\"\n                    icon={ props.menuIcon }\n                  />\n                ) : undefined }\n              </>\n            ),\n          }}\n        </VTextField>\n      )\n    })\n\n    return forwardRefs({\n      isFocused,\n      menu,\n      select,\n    }, vTextFieldRef)\n  },\n})\n\nexport type VSelect = InstanceType<typeof VSelect>\n","// Utilities\nimport { shallowRef, watch } from 'vue'\n\n// Types\nimport type { Ref } from 'vue'\nimport type { VList } from '@/components/VList'\nimport type { VTextField } from '@/components/VTextField'\n\nexport function useScrolling (listRef: Ref<VList | undefined>, textFieldRef: Ref<VTextField | undefined>) {\n  const isScrolling = shallowRef(false)\n  let scrollTimeout: number\n  function onListScroll (e: Event) {\n    cancelAnimationFrame(scrollTimeout)\n    isScrolling.value = true\n    scrollTimeout = requestAnimationFrame(() => {\n      scrollTimeout = requestAnimationFrame(() => {\n        isScrolling.value = false\n      })\n    })\n  }\n  async function finishScrolling () {\n    await new Promise(resolve => requestAnimationFrame(resolve))\n    await new Promise(resolve => requestAnimationFrame(resolve))\n    await new Promise(resolve => requestAnimationFrame(resolve))\n    await new Promise<void>(resolve => {\n      if (isScrolling.value) {\n        const stop = watch(isScrolling, () => {\n          stop()\n          resolve()\n        })\n      } else resolve()\n    })\n  }\n  async function onListKeydown (e: KeyboardEvent) {\n    if (e.key === 'Tab') {\n      textFieldRef.value?.focus()\n    }\n\n    if (!['PageDown', 'PageUp', 'Home', 'End'].includes(e.key)) return\n    const el: HTMLElement = listRef.value?.$el\n    if (!el) return\n\n    if (e.key === 'Home' || e.key === 'End') {\n      el.scrollTo({\n        top: e.key === 'Home' ? 0 : el.scrollHeight,\n        behavior: 'smooth',\n      })\n    }\n\n    await finishScrolling()\n\n    const children = el.querySelectorAll(':scope > :not(.v-virtual-scroll__spacer)')\n\n    if (e.key === 'PageDown' || e.key === 'Home') {\n      const top = el.getBoundingClientRect().top\n      for (const child of children) {\n        if (child.getBoundingClientRect().top >= top) {\n          (child as HTMLElement).focus()\n          break\n        }\n      }\n    } else {\n      const bottom = el.getBoundingClientRect().bottom\n      for (const child of [...children].reverse()) {\n        if (child.getBoundingClientRect().bottom <= bottom) {\n          (child as HTMLElement).focus()\n          break\n        }\n      }\n    }\n  }\n\n  return { onListScroll, onListKeydown }\n}\n","// Styles\nimport './VVirtualScroll.sass'\n\n// Components\nimport { VVirtualScrollItem } from './VVirtualScrollItem'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { useToggleScope } from '@/composables/toggleScope'\nimport { makeVirtualProps, useVirtual } from '@/composables/virtual'\n\n// Utilities\nimport { onMounted, onScopeDispose, toRef } from 'vue'\nimport {\n  convertToUnit,\n  genericComponent,\n  getCurrentInstance,\n  getScrollParent,\n  propsFactory,\n  useRender,\n} from '@/util'\n\n// Types\nimport type { PropType, Ref } from 'vue'\nimport type { GenericProps } from '@/util'\n\nexport interface VVirtualScrollSlot<T> {\n  item: T\n  index: number\n}\n\nexport const makeVVirtualScrollProps = propsFactory({\n  items: {\n    type: Array as PropType<readonly unknown[]>,\n    default: () => ([]),\n  },\n  renderless: Boolean,\n\n  ...makeVirtualProps(),\n  ...makeComponentProps(),\n  ...makeDimensionProps(),\n}, 'VVirtualScroll')\n\nexport const VVirtualScroll = genericComponent<new <T, Renderless extends boolean = false>(\n  props: {\n    items?: readonly T[]\n    renderless?: Renderless\n  },\n  slots: {\n    default: VVirtualScrollSlot<T> & (Renderless extends true ? {\n      itemRef: Ref<HTMLElement | undefined>\n    } : {})\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VVirtualScroll',\n\n  props: makeVVirtualScrollProps(),\n\n  setup (props, { slots }) {\n    const vm = getCurrentInstance('VVirtualScroll')\n    const { dimensionStyles } = useDimension(props)\n    const {\n      containerRef,\n      markerRef,\n      handleScroll,\n      handleScrollend,\n      handleItemResize,\n      scrollToIndex,\n      paddingTop,\n      paddingBottom,\n      computedItems,\n    } = useVirtual(props, toRef(props, 'items'))\n\n    useToggleScope(() => props.renderless, () => {\n      function handleListeners (add = false) {\n        const method = add ? 'addEventListener' : 'removeEventListener'\n\n        if (containerRef.value === document.documentElement) {\n          document[method]('scroll', handleScroll, { passive: true })\n          document[method]('scrollend', handleScrollend)\n        } else {\n          containerRef.value?.[method]('scroll', handleScroll, { passive: true })\n          containerRef.value?.[method]('scrollend', handleScrollend)\n        }\n      }\n\n      onMounted(() => {\n        containerRef.value = getScrollParent(vm.vnode.el as HTMLElement, true)\n        handleListeners(true)\n      })\n      onScopeDispose(handleListeners)\n    })\n\n    useRender(() => {\n      const children = computedItems.value.map(item => (\n        <VVirtualScrollItem\n          key={ item.index }\n          renderless={ props.renderless }\n          onUpdate:height={ height => handleItemResize(item.index, height) }\n        >\n          { slotProps => slots.default?.({ item: item.raw, index: item.index, ...slotProps }) }\n        </VVirtualScrollItem>\n      ))\n\n      return props.renderless ? (\n        <>\n          <div ref={ markerRef } class=\"v-virtual-scroll__spacer\" style={{ paddingTop: convertToUnit(paddingTop.value) }} />\n          { children }\n          <div class=\"v-virtual-scroll__spacer\" style={{ paddingBottom: convertToUnit(paddingBottom.value) }} />\n        </>\n      ) : (\n        <div\n          ref={ containerRef }\n          class={[\n            'v-virtual-scroll',\n            props.class,\n          ]}\n          onScrollPassive={ handleScroll }\n          onScrollend={ handleScrollend }\n          style={[\n            dimensionStyles.value,\n            props.style,\n          ]}\n        >\n          <div\n            ref={ markerRef }\n            class=\"v-virtual-scroll__container\"\n            style={{\n              paddingTop: convertToUnit(paddingTop.value),\n              paddingBottom: convertToUnit(paddingBottom.value),\n            }}\n          >\n            { children }\n          </div>\n        </div>\n      )\n    })\n\n    return {\n      scrollToIndex,\n    }\n  },\n})\n\nexport type VVirtualScroll = InstanceType<typeof VVirtualScroll>\n","// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { useResizeObserver } from '@/composables/resizeObserver'\n\n// Utilities\nimport { watch } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { GenericProps, TemplateRef } from '@/util'\n\nexport const makeVVirtualScrollItemProps = propsFactory({\n  renderless: Boolean,\n\n  ...makeComponentProps(),\n}, 'VVirtualScrollItem')\n\nexport const VVirtualScrollItem = genericComponent<new <Renderless extends boolean = false>(\n  props: {\n    renderless?: Renderless\n  },\n  slots: {\n    default: Renderless extends true ? {\n      itemRef: TemplateRef\n    } : never\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VVirtualScrollItem',\n\n  inheritAttrs: false,\n\n  props: makeVVirtualScrollItemProps(),\n\n  emits: {\n    'update:height': (height: number) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const { resizeRef, contentRect } = useResizeObserver(undefined, 'border')\n\n    watch(() => contentRect.value?.height, height => {\n      if (height != null) emit('update:height', height)\n    })\n\n    useRender(() => props.renderless ? (\n      <>\n        { slots.default?.({ itemRef: resizeRef }) }\n      </>\n    ) : (\n      <div\n        ref={ resizeRef }\n        class={[\n          'v-virtual-scroll__item',\n          props.class,\n        ]}\n        style={ props.style }\n        { ...attrs }\n      >\n        { (slots.default as any)?.() }\n      </div>\n    ))\n  },\n})\n","// Composables\nimport { useDisplay } from '@/composables/display'\nimport { useResizeObserver } from '@/composables/resizeObserver'\n\n// Utilities\nimport { computed, nextTick, onScopeDispose, ref, shallowRef, watch, watchEffect } from 'vue'\nimport { clamp, debounce, IN_BROWSER, propsFactory } from '@/util'\n\n// Types\nimport type { Ref } from 'vue'\n\nconst UP = -1\nconst DOWN = 1\n\n/** Determines how large each batch of items should be */\nconst BUFFER_PX = 100\n\ntype VirtualProps = {\n  itemHeight?: number | string\n  height?: number | string\n}\n\nexport const makeVirtualProps = propsFactory({\n  itemHeight: {\n    type: [Number, String],\n    default: null,\n  },\n  height: [Number, String],\n}, 'virtual')\n\nexport function useVirtual <T> (props: VirtualProps, items: Ref<readonly T[]>) {\n  const display = useDisplay()\n\n  const itemHeight = shallowRef(0)\n  watchEffect(() => {\n    itemHeight.value = parseFloat(props.itemHeight || 0)\n  })\n\n  const first = shallowRef(0)\n  const last = shallowRef(Math.ceil(\n    // Assume 16px items filling the entire screen height if\n    // not provided. This is probably incorrect but it minimises\n    // the chance of ending up with empty space at the bottom.\n    // The default value is set here to avoid poisoning getSize()\n    (parseInt(props.height!) || display.height.value) / (itemHeight.value || 16)\n  ) || 1)\n  const paddingTop = shallowRef(0)\n  const paddingBottom = shallowRef(0)\n\n  /** The scrollable element */\n  const containerRef = ref<HTMLElement>()\n  /** An element marking the top of the scrollable area,\n   * used to add an offset if there's padding or other elements above the virtual list */\n  const markerRef = ref<HTMLElement>()\n  /** markerRef's offsetTop, lazily evaluated */\n  let markerOffset = 0\n\n  const { resizeRef, contentRect } = useResizeObserver()\n  watchEffect(() => {\n    resizeRef.value = containerRef.value\n  })\n  const viewportHeight = computed(() => {\n    return containerRef.value === document.documentElement\n      ? display.height.value\n      : contentRect.value?.height || parseInt(props.height!) || 0\n  })\n  /** All static elements have been rendered and we have an assumed item height */\n  const hasInitialRender = computed(() => {\n    return !!(containerRef.value && markerRef.value && viewportHeight.value && itemHeight.value)\n  })\n\n  let sizes = Array.from<number | null>({ length: items.value.length })\n  let offsets = Array.from<number>({ length: items.value.length })\n  const updateTime = shallowRef(0)\n  let targetScrollIndex = -1\n\n  function getSize (index: number) {\n    return sizes[index] || itemHeight.value\n  }\n\n  const updateOffsets = debounce(() => {\n    const start = performance.now()\n    offsets[0] = 0\n    const length = items.value.length\n    for (let i = 1; i <= length - 1; i++) {\n      offsets[i] = (offsets[i - 1] || 0) + getSize(i - 1)\n    }\n    updateTime.value = Math.max(updateTime.value, performance.now() - start)\n  }, updateTime)\n\n  const unwatch = watch(hasInitialRender, v => {\n    if (!v) return\n    // First render is complete, update offsets and visible\n    // items in case our assumed item height was incorrect\n\n    unwatch()\n    markerOffset = markerRef.value!.offsetTop\n    updateOffsets.immediate()\n    calculateVisibleItems()\n\n    if (!~targetScrollIndex) return\n\n    nextTick(() => {\n      IN_BROWSER && window.requestAnimationFrame(() => {\n        scrollToIndex(targetScrollIndex)\n        targetScrollIndex = -1\n      })\n    })\n  })\n\n  onScopeDispose(() => {\n    updateOffsets.clear()\n  })\n\n  function handleItemResize (index: number, height: number) {\n    const prevHeight = sizes[index]\n    const prevMinHeight = itemHeight.value\n\n    itemHeight.value = prevMinHeight ? Math.min(itemHeight.value, height) : height\n\n    if (prevHeight !== height || prevMinHeight !== itemHeight.value) {\n      sizes[index] = height\n      updateOffsets()\n    }\n  }\n\n  function calculateOffset (index: number) {\n    index = clamp(index, 0, items.value.length - 1)\n    return offsets[index] || 0\n  }\n\n  function calculateIndex (scrollTop: number) {\n    return binaryClosest(offsets, scrollTop)\n  }\n\n  let lastScrollTop = 0\n  let scrollVelocity = 0\n  let lastScrollTime = 0\n\n  watch(viewportHeight, (val, oldVal) => {\n    if (oldVal) {\n      calculateVisibleItems()\n      if (val < oldVal) {\n        requestAnimationFrame(() => {\n          scrollVelocity = 0\n          calculateVisibleItems()\n        })\n      }\n    }\n  })\n\n  function handleScroll () {\n    if (!containerRef.value || !markerRef.value) return\n\n    const scrollTop = containerRef.value.scrollTop\n    const scrollTime = performance.now()\n    const scrollDeltaT = scrollTime - lastScrollTime\n\n    if (scrollDeltaT > 500) {\n      scrollVelocity = Math.sign(scrollTop - lastScrollTop)\n\n      // Not super important, only update at the\n      // start of a scroll sequence to avoid reflows\n      markerOffset = markerRef.value.offsetTop\n    } else {\n      scrollVelocity = scrollTop - lastScrollTop\n    }\n\n    lastScrollTop = scrollTop\n    lastScrollTime = scrollTime\n\n    calculateVisibleItems()\n  }\n  function handleScrollend () {\n    if (!containerRef.value || !markerRef.value) return\n\n    scrollVelocity = 0\n    lastScrollTime = 0\n\n    calculateVisibleItems()\n  }\n\n  let raf = -1\n  function calculateVisibleItems () {\n    cancelAnimationFrame(raf)\n    raf = requestAnimationFrame(_calculateVisibleItems)\n  }\n  function _calculateVisibleItems () {\n    if (!containerRef.value || !viewportHeight.value) return\n    const scrollTop = lastScrollTop - markerOffset\n    const direction = Math.sign(scrollVelocity)\n\n    const startPx = Math.max(0, scrollTop - BUFFER_PX)\n    const start = clamp(calculateIndex(startPx), 0, items.value.length)\n\n    const endPx = scrollTop + viewportHeight.value + BUFFER_PX\n    const end = clamp(calculateIndex(endPx) + 1, start + 1, items.value.length)\n\n    if (\n      // Only update the side we're scrolling towards,\n      // the other side will be updated incidentally\n      (direction !== UP || start < first.value) &&\n      (direction !== DOWN || end > last.value)\n    ) {\n      const topOverflow = calculateOffset(first.value) - calculateOffset(start)\n      const bottomOverflow = calculateOffset(end) - calculateOffset(last.value)\n      const bufferOverflow = Math.max(topOverflow, bottomOverflow)\n\n      if (bufferOverflow > BUFFER_PX) {\n        first.value = start\n        last.value = end\n      } else {\n        // Only update the side that's reached its limit if there's still buffer left\n        if (start <= 0) first.value = start\n        if (end >= items.value.length) last.value = end\n      }\n    }\n\n    paddingTop.value = calculateOffset(first.value)\n    paddingBottom.value = calculateOffset(items.value.length) - calculateOffset(last.value)\n  }\n\n  function scrollToIndex (index: number) {\n    const offset = calculateOffset(index)\n    if (!containerRef.value || (index && !offset)) {\n      targetScrollIndex = index\n    } else {\n      containerRef.value.scrollTop = offset\n    }\n  }\n\n  const computedItems = computed(() => {\n    return items.value.slice(first.value, last.value).map((item, index) => ({\n      raw: item,\n      index: index + first.value,\n    }))\n  })\n\n  watch(items, () => {\n    sizes = Array.from({ length: items.value.length })\n    offsets = Array.from({ length: items.value.length })\n    updateOffsets.immediate()\n    calculateVisibleItems()\n  }, { deep: true })\n\n  return {\n    containerRef,\n    markerRef,\n    computedItems,\n    paddingTop,\n    paddingBottom,\n    scrollToIndex,\n    handleScroll,\n    handleScrollend,\n    handleItemResize,\n  }\n}\n\n// https://gist.github.com/robertleeplummerjr/1cc657191d34ecd0a324\nfunction binaryClosest (arr: ArrayLike<number>, val: number) {\n  let high = arr.length - 1\n  let low = 0\n  let mid = 0\n  let item = null\n  let target = -1\n\n  if (arr[high]! < val) {\n    return high\n  }\n\n  while (low <= high) {\n    mid = (low + high) >> 1\n    item = arr[mid]!\n\n    if (item > val) {\n      high = mid - 1\n    } else if (item < val) {\n      target = mid\n      low = mid + 1\n    } else if (item === val) {\n      return mid\n    } else {\n      return low\n    }\n  }\n\n  return target\n}\n"],"names":["makeVCheckboxBtnProps","propsFactory","indeterminate","Boolean","indeterminateIcon","type","IconValue","default","makeVSelectionControlProps","falseIcon","trueIcon","VCheckboxBtn","genericComponent","name","props","emits","value","setup","_ref","slots","useProxiedModel","model","onChange","v","computed","useRender","controlProps","omit","VSelectionControl","filterProps","_createVNode","_mergeProps","$event","class","style","undefined","makeVContainerProps","fluid","makeComponentProps","makeTagProps","VContainer","rtlClasses","useRtl","tag","makeSelectProps","chips","closableChips","closeText","String","openText","eager","hideNoData","hideSelected","listProps","Object","menu","menuIcon","menuProps","multiple","noDataText","openOnClear","itemColor","makeItemsProps","itemChildren","makeVSelectProps","makeVTextFieldProps","modelValue","role","makeTransitionProps","transition","component","VDialogTransition","VSelect","focused","ue","t","useLocale","vTextFieldRef","ref","vMenuRef","vVirtualScrollRef","_menu","get","set","ΨopenChildren","items","transformIn","transformOut","useItems","wrapInArray","transformed","counterValue","length","form","useForm","selectedValues","map","selection","isFocused","shallowRef","label","keyboardLookupLastTime","keyboardLookupPrefix","displayItems","filter","item","some","s","valueComparator","menuDisabled","readonly","isReadonly","computedMenuProps","activatorProps","listRef","onListScroll","onListKeydown","useScrolling","onClear","e","onMousedownControl","onKeydown","key","includes","preventDefault","focus","KEYBOARD_LOOKUP_THRESHOLD","checkPrintable","isPrintableChar","noModifier","ctrlKey","metaKey","altKey","now","performance","toLowerCase","find","title","startsWith","index","indexOf","IN_BROWSER","window","requestAnimationFrame","scrollToIndex","select","arguments","disabled","findIndex","add","splice","nextTick","onBlur","$el","contains","relatedTarget","onAfterLeave","onFocusin","onModelUpdate","matchesSelector","watch","newVal","oldVal","hasChips","chip","hasList","isDirty","textFieldProps","VTextField","placeholder","persistentPlaceholder","join","externalValue","_Fragment","VMenu","VList","color","VListItem","VVirtualScroll","_ref2","itemRef","itemProps","mergeProps","onClick","prepend","_ref3","isSelected","prependAvatar","VAvatar","prependIcon","VIcon","onChipClose","stopPropagation","slotProps","onMousedown","hasSlot","slotContent","ensureValidVNode","VDefaultsProvider","VChip","closable","size","text","_createTextVNode","_len","args","Array","_key","forwardRefs","textFieldRef","isScrolling","scrollTimeout","cancelAnimationFrame","async","finishScrolling","Promise","resolve","stop","el","scrollTo","top","scrollHeight","behavior","children","querySelectorAll","getBoundingClientRect","child","bottom","reverse","makeVVirtualScrollProps","renderless","makeVirtualProps","makeDimensionProps","vm","getCurrentInstance","dimensionStyles","useDimension","containerRef","markerRef","handleScroll","handleScrollend","handleItemResize","paddingTop","paddingBottom","computedItems","useVirtual","toRef","useToggleScope","handleListeners","method","document","documentElement","passive","onMounted","getScrollParent","vnode","onScopeDispose","VVirtualScrollItem","height","raw","convertToUnit","makeVVirtualScrollItemProps","inheritAttrs","attrs","emit","resizeRef","contentRect","useResizeObserver","UP","DOWN","BUFFER_PX","itemHeight","Number","display","useDisplay","watchEffect","parseFloat","first","last","Math","ceil","parseInt","markerOffset","viewportHeight","hasInitialRender","sizes","from","offsets","updateTime","targetScrollIndex","getSize","updateOffsets","debounce","start","i","max","unwatch","offsetTop","immediate","calculateVisibleItems","prevHeight","prevMinHeight","min","calculateOffset","clamp","calculateIndex","scrollTop","binaryClosest","clear","lastScrollTop","scrollVelocity","lastScrollTime","scrollTime","scrollDeltaT","sign","val","raf","_calculateVisibleItems","direction","startPx","endPx","end","topOverflow","bottomOverflow","bufferOverflow","offset","slice","deep","arr","high","low","mid","target"],"sourceRoot":""}